<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrolly_1_1application__dirs" kind="class" language="C++" prot="public">
    <compoundname>rolly::application_dirs</compoundname>
    <includes refid="directories_8h" local="no">directories.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75" prot="public" static="no" strong="yes">
        <type><ref refid="namespacerolly_1_1types_1a254d32383658e016368673396e7afc1b" kindref="member">u8</ref></type>
        <name>dir</name>
        <enumvalue id="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75a0fea6a13c52b4d4725368f24b045ca84" prot="public">
          <name>cache</name>
          <briefdescription>
<para>Cache directory. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75a2245023265ae4cf87d02c8b6ba991139" prot="public">
          <name>config</name>
          <briefdescription>
<para>Config directory. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75a63e5ccc32239b155c8691da2de09d8f1" prot="public">
          <name>config_local</name>
          <briefdescription>
<para>Local config directory. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75a8d777f385d3dfec8815d20f7496026dc" prot="public">
          <name>data</name>
          <briefdescription>
<para>Data directory. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75a109d0fabf7fadeb851631940a8ce6e34" prot="public">
          <name>data_local</name>
          <briefdescription>
<para>Local data directory. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75a1ce027fe3518cc64ef3570b50a9a7c10" prot="public">
          <name>preferences</name>
          <briefdescription>
<para>Preferences directory. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75ab4a619251c5c397f26d05c9b0e7bf97a" prot="public">
          <name>runtime</name>
          <briefdescription>
<para>Runtime directory. Can be unavailable on some platforms. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75a9ed39e2ea931586b6a985a6942ef573e" prot="public">
          <name>state</name>
          <briefdescription>
<para>State directory. Can be unavailable on some platforms. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Supported application directory types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="63" column="19" bodyfile="include/rolly/directories.h" bodystart="63" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrolly_1_1application__dirs_1a681fc158b6f93bad55aac0dcf2b4dff4" prot="private" static="no" mutable="no">
        <type>std::filesystem::path</type>
        <definition>std::filesystem::path project_path_</definition>
        <argsstring></argsstring>
        <name>project_path_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="330" column="27" bodyfile="include/rolly/directories.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1application__dirs_1a8708b6187e9976237b9516c21aadf822" prot="private" static="no" mutable="no">
        <type>std::filesystem::path</type>
        <definition>std::filesystem::path cache_dir_</definition>
        <argsstring></argsstring>
        <name>cache_dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="331" column="27" bodyfile="include/rolly/directories.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1application__dirs_1aaba55b6678ac34ecd42f5e3b0646d126" prot="private" static="no" mutable="no">
        <type>std::filesystem::path</type>
        <definition>std::filesystem::path config_dir_</definition>
        <argsstring></argsstring>
        <name>config_dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="332" column="27" bodyfile="include/rolly/directories.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1application__dirs_1a14a686f4d5a0cfdfd7fc17aa4d34ecde" prot="private" static="no" mutable="no">
        <type>std::filesystem::path</type>
        <definition>std::filesystem::path config_local_dir_</definition>
        <argsstring></argsstring>
        <name>config_local_dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="333" column="27" bodyfile="include/rolly/directories.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1application__dirs_1a93e41434d609c7f2a1a54d414af96a56" prot="private" static="no" mutable="no">
        <type>std::filesystem::path</type>
        <definition>std::filesystem::path data_dir_</definition>
        <argsstring></argsstring>
        <name>data_dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="334" column="27" bodyfile="include/rolly/directories.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1application__dirs_1acd8e104438a18f60bd7b83ef7dd37181" prot="private" static="no" mutable="no">
        <type>std::filesystem::path</type>
        <definition>std::filesystem::path data_local_dir_</definition>
        <argsstring></argsstring>
        <name>data_local_dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="335" column="27" bodyfile="include/rolly/directories.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1application__dirs_1a31b336dba18a4108e441e83c8a732e27" prot="private" static="no" mutable="no">
        <type>std::filesystem::path</type>
        <definition>std::filesystem::path preference_dir_</definition>
        <argsstring></argsstring>
        <name>preference_dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="336" column="27" bodyfile="include/rolly/directories.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1application__dirs_1a14e4a14d14983d8f904f4901b7e048ee" prot="private" static="no" mutable="no">
        <type>std::optional&lt; std::filesystem::path &gt;</type>
        <definition>std::optional&lt;std::filesystem::path&gt; runtime_dir_</definition>
        <argsstring></argsstring>
        <name>runtime_dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="337" column="19" bodyfile="include/rolly/directories.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1application__dirs_1a4aa7f02371f0ad22bd13d2c80f0da1e9" prot="private" static="no" mutable="no">
        <type>std::optional&lt; std::filesystem::path &gt;</type>
        <definition>std::optional&lt;std::filesystem::path&gt; state_dir_</definition>
        <argsstring></argsstring>
        <name>state_dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="338" column="19" bodyfile="include/rolly/directories.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a55c0e5e3ac7e710af26c992fd49dec50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>application_dirs</definition>
        <argsstring>(std::string_view qualifier, std::string_view vendor, std::string_view app)</argsstring>
        <name>application_dirs</name>
        <param>
          <type>std::string_view</type>
          <declname>qualifier</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>vendor</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>Creates an <ref refid="classrolly_1_1application__dirs" kindref="compound">application_dirs</ref> class from values describing the project. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Constructor can fail if no valid home directory could be retrieved from the operating system. </para>
</simplesect>
<simplesect kind="note"><para>Directories will be created if they do not exist. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>qualifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The reverse domain name notation of the application, excluding the organization or application name itself.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Example values of qualifier: <itemizedlist>
<listitem>
<para><computeroutput>&quot;com.example&quot;</computeroutput> </para>
</listitem>
<listitem>
<para><computeroutput>&quot;org&quot;</computeroutput> </para>
</listitem>
<listitem>
<para><computeroutput>&quot;uk.co&quot;</computeroutput> </para>
</listitem>
<listitem>
<para><computeroutput>&quot;io&quot;</computeroutput> </para>
</listitem>
<listitem>
<para><computeroutput>&quot;&quot;</computeroutput> </para>
</listitem>
</itemizedlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vendor</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the organization that develops this application, or for which the application is developed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Example values of vendor: <itemizedlist>
<listitem>
<para><computeroutput>&quot;Foo Corp&quot;</computeroutput> </para>
</listitem>
<listitem>
<para><computeroutput>&quot;Bar Ltd&quot;</computeroutput> </para>
</listitem>
<listitem>
<para><computeroutput>&quot;Example Inc&quot;</computeroutput> </para>
</listitem>
</itemizedlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the application itself.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Example values of app: <itemizedlist>
<listitem>
<para><computeroutput>&quot;Bar App&quot;</computeroutput> </para>
</listitem>
<listitem>
<para><computeroutput>&quot;Foo App&quot;</computeroutput> </para>
</listitem>
</itemizedlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="cpp/error/runtime_error" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::runtime_error</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if no valid home directory could be retrieved from the operating system. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="110" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a9d30264f6f4177a75053575e5e04f771" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>application_dirs</definition>
        <argsstring>(meta::project_meta const &amp;meta)</argsstring>
        <name>application_dirs</name>
        <param>
          <type><ref refid="classrolly_1_1meta_1_1project__meta" kindref="compound">meta::project_meta</ref> const &amp;</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Creates an <ref refid="classrolly_1_1application__dirs" kindref="compound">application_dirs</ref> class from values describing the project. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Constuctor can fail if no valid home directory could be retrieved from the operating system. </para>
</simplesect>
<simplesect kind="note"><para>Directories will be created if they do not exist. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
<para>The project meta data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="cpp/error/runtime_error" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::runtime_error</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if no valid home directory could be retrieved from the operating system. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classrolly_1_1meta_1_1project__meta" kindref="compound">meta::project_meta</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="123" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a2d42730a391790d4be3c9fe14af5327e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create</definition>
        <argsstring>() const</argsstring>
        <name>create</name>
        <briefdescription>
<para>Creates the directories if they do not exist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="132" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a83b6c3587991d0a3afeac89f2c61de17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remove</definition>
        <argsstring>() const</argsstring>
        <name>remove</name>
        <briefdescription>
<para>Removes the directories and their contents from the filesystem. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="141" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a877c175fe97261a9b214ed7152481482" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::filesystem::path const  &amp;</type>
        <definition>std::filesystem::path const&amp; get</definition>
        <argsstring>(dir d) const</argsstring>
        <name>get</name>
        <param>
          <type><ref refid="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75" kindref="member">dir</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Returns the path to the directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>The directory type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The path to the directory. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="cpp/error/system_error" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::system_error</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>If the directory does not exist on this platform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Use explicit functions such as <ref refid="classrolly_1_1application__dirs_1a59c6f1acf971116e29638f2603ddab24" kindref="member">application_dirs::config_dir</ref> to avoid this exception. </para>
</simplesect>
<simplesect kind="see"><para>operator[] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="155" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a00ff1719edd03ad0aff4a10010eb503b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::filesystem::path const  &amp;</type>
        <definition>std::filesystem::path const&amp; operator[]</definition>
        <argsstring>(dir d) const</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75" kindref="member">dir</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Returns the path to the directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>The directory type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The path to the directory. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="cpp/error/system_error" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::system_error</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>If the directory does not exist on this platform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Use explicit functions such as <ref refid="classrolly_1_1application__dirs_1a59c6f1acf971116e29638f2603ddab24" kindref="member">application_dirs::config_dir</ref> to avoid this exception. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classrolly_1_1application__dirs_1a877c175fe97261a9b214ed7152481482" kindref="member">get</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="165" column="41" bodyfile="include/rolly/directories.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a30e2c864bb359337268ceea8388e6a70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::filesystem::path const  &amp;</type>
        <definition>std::filesystem::path const&amp; project_path</definition>
        <argsstring>() const</argsstring>
        <name>project_path</name>
        <briefdescription>
<para>Returns the project path fragment used to compute the project&apos;s cache/config/data directories. </para>
        </briefdescription>
        <detaileddescription>
<para>The value is derived from the constructor call and is platform-dependent. <simplesect kind="return"><para>The project path. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="176" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a16a0cf395395ae824d875bd7e6d8a842" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::filesystem::path const  &amp;</type>
        <definition>std::filesystem::path const&amp; cache_dir</definition>
        <argsstring>() const</argsstring>
        <name>cache_dir</name>
        <briefdescription>
<para>Returns the path to the project&apos;s cache directory. </para>
        </briefdescription>
        <detaileddescription>
<para>Values on different platforms: <itemizedlist>
<listitem>
<para><bold>Linux</bold>: <computeroutput>$XDG_CACHE_HOME</computeroutput>/<computeroutput>project_path</computeroutput> or <computeroutput>$HOME</computeroutput>/.cache/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/home/alice/.cache/barapp</computeroutput> </para>
</listitem>
<listitem>
<para><bold>MacOS</bold>: <computeroutput>$HOME/Library/Caches</computeroutput>/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/Users/Alice/Library/Caches/com.Foo-Corp.Bar-App</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Windows</bold>: <computeroutput>LOCALAPPDATA%</computeroutput>\<computeroutput>project_path</computeroutput>\cache, for example: <computeroutput>C:\Users\Alice\AppData\Local\Foo Corp\Bar App\cache</computeroutput> </para>
</listitem>
</itemizedlist>
<simplesect kind="return"><para>The path to the project&apos;s cache directory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="195" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a59c6f1acf971116e29638f2603ddab24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::filesystem::path const  &amp;</type>
        <definition>std::filesystem::path const&amp; config_dir</definition>
        <argsstring>() const</argsstring>
        <name>config_dir</name>
        <briefdescription>
<para>Returns the path to the project&apos;s config directory. </para>
        </briefdescription>
        <detaileddescription>
<para>Values on different platforms: <itemizedlist>
<listitem>
<para><bold>Linux</bold>: <computeroutput>$XDG_CONFIG_HOME</computeroutput>/<computeroutput>project_path</computeroutput> or <computeroutput>$HOME</computeroutput>/.config/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/home/alice/.config/barapp</computeroutput> </para>
</listitem>
<listitem>
<para><bold>MacOS</bold>: <computeroutput>$HOME/Library/Application Support</computeroutput>/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/Users/Alice/Library/Application Support/com.Foo-Corp.Bar-App</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Windows</bold>: <computeroutput>APPDATA%</computeroutput>\<computeroutput>project_path</computeroutput>\config, for example: <computeroutput>C:\Users\Alice\AppData\Roaming\Foo Corp\Bar App\config</computeroutput> </para>
</listitem>
</itemizedlist>
<simplesect kind="return"><para>The path to the project&apos;s config directory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="214" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1af397d204a53b4d8663cab8fe3290f7e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::filesystem::path const  &amp;</type>
        <definition>std::filesystem::path const&amp; config_local_dir</definition>
        <argsstring>() const</argsstring>
        <name>config_local_dir</name>
        <briefdescription>
<para>Returns the path to the project&apos;s config_local directory. </para>
        </briefdescription>
        <detaileddescription>
<para>Values on different platforms: <itemizedlist>
<listitem>
<para><bold>Linux</bold>: <computeroutput>$XDG_CONFIG_HOME</computeroutput>/<computeroutput>project_path</computeroutput> or <computeroutput>$HOME</computeroutput>/.config/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/home/alice/.config/barapp</computeroutput> </para>
</listitem>
<listitem>
<para><bold>MacOS</bold>: <computeroutput>$HOME/Library/Application Support</computeroutput>/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/Users/Alice/Library/Application Support/com.Foo-Corp.Bar-App</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Windows</bold>: <computeroutput>LOCALAPPDATA%</computeroutput>\<computeroutput>project_path</computeroutput>\config, for example: <computeroutput>C:\Users\Alice\AppData\Roaming\Foo Corp\Bar App\config</computeroutput> </para>
</listitem>
</itemizedlist>
<simplesect kind="return"><para>The path to the project&apos;s config_local directory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="233" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a4bc1b913553cb31ddf0c37cc55c6c4c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::filesystem::path const  &amp;</type>
        <definition>std::filesystem::path const&amp; data_dir</definition>
        <argsstring>() const</argsstring>
        <name>data_dir</name>
        <briefdescription>
<para>Returns the path to the project&apos;s data directory. </para>
        </briefdescription>
        <detaileddescription>
<para>Values on different platforms: <itemizedlist>
<listitem>
<para><bold>Linux</bold>: <computeroutput>$XDG_DATA_HOME</computeroutput>/<computeroutput>project_path</computeroutput> or <computeroutput>$HOME</computeroutput>/.local/share/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/home/alice/.local/share/barapp</computeroutput> </para>
</listitem>
<listitem>
<para><bold>MacOS</bold>: <computeroutput>$HOME/Library/Application Support</computeroutput>/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/Users/Alice/Library/Application Support/com.Foo-Corp.Bar-App</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Windows</bold>: <computeroutput>LOCALAPPDATA%</computeroutput>\<computeroutput>project_path</computeroutput>\data, for example: <computeroutput>C:\Users\Alice\AppData\Roaming\Foo Corp\Bar App\data</computeroutput> </para>
</listitem>
</itemizedlist>
<simplesect kind="return"><para>The path to the project&apos;s data directory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="252" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a9515233f07cdc7f8626c6e85e2ff6fe2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::filesystem::path const  &amp;</type>
        <definition>std::filesystem::path const&amp; data_local_dir</definition>
        <argsstring>() const</argsstring>
        <name>data_local_dir</name>
        <briefdescription>
<para>Returns the path to the project&apos;s data_local directory. </para>
        </briefdescription>
        <detaileddescription>
<para>Values on different platforms: <itemizedlist>
<listitem>
<para><bold>Linux</bold>: <computeroutput>$XDG_DATA_HOME</computeroutput>/<computeroutput>project_path</computeroutput> or <computeroutput>$HOME</computeroutput>/.local/share/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/home/alice/.local/share/barapp</computeroutput> </para>
</listitem>
<listitem>
<para><bold>MacOS</bold>: <computeroutput>$HOME/Library/Application Support</computeroutput>/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/Users/Alice/Library/Application Support/com.Foo-Corp.Bar-App</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Windows</bold>: <computeroutput>LOCALAPPDATA%</computeroutput>\<computeroutput>project_path</computeroutput>\data, for example: <computeroutput>C:\Users\Alice\AppData\Roaming\Foo Corp\Bar App\data</computeroutput> </para>
</listitem>
</itemizedlist>
<simplesect kind="return"><para>The path to the project&apos;s data_local directory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="271" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1ac0c60c9ab055e4fbe6e2faecd6722a9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::filesystem::path const  &amp;</type>
        <definition>std::filesystem::path const&amp; preference_dir</definition>
        <argsstring>() const</argsstring>
        <name>preference_dir</name>
        <briefdescription>
<para>Returns the path to the project&apos;s preference directory. </para>
        </briefdescription>
        <detaileddescription>
<para>Values on different platforms: <itemizedlist>
<listitem>
<para><bold>Linux</bold>: <computeroutput>$XDG_CONFIG_HOME</computeroutput>/<computeroutput>project_path</computeroutput> or <computeroutput>$HOME</computeroutput>/.config/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/home/alice/.config/barapp</computeroutput> </para>
</listitem>
<listitem>
<para><bold>MacOS</bold>: <computeroutput>$HOME</computeroutput>/Library/Preferences/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/Users/Alice/Library/Preferences/com.Foo-Corp.Bar-App</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Windows</bold>: <computeroutput>LOCALAPPDATA%</computeroutput>\<computeroutput>project_path</computeroutput>\config, for example: <computeroutput>C:\Users\Alice\AppData\Roaming\Foo Corp\Bar App\config</computeroutput> </para>
</listitem>
</itemizedlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="290" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a559edd679316c7ced41fef5119788cef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::filesystem::path &gt; const  &amp;</type>
        <definition>std::optional&lt;std::filesystem::path&gt; const&amp; runtime_dir</definition>
        <argsstring>() const</argsstring>
        <name>runtime_dir</name>
        <briefdescription>
<para>Returns the path to the project&apos;s runtime directory. </para>
        </briefdescription>
        <detaileddescription>
<para>The runtime directory contains transient, non-essential data (like sockets or named pipes) that is expected to be cleared when the user&apos;s session ends.<linebreak/>
 Values on different platforms: <itemizedlist>
<listitem>
<para><bold>Linux</bold>: <computeroutput>XDG_RUNTIME_DIR</computeroutput>/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/run/user/1001/barapp</computeroutput> </para>
</listitem>
<listitem>
<para><bold>MacOS</bold>: - </para>
</listitem>
<listitem>
<para><bold>Windows</bold>: - </para>
</listitem>
</itemizedlist>
<simplesect kind="note"><para>Only for Linux. </para>
</simplesect>
<simplesect kind="return"><para>The path to the project&apos;s runtime directory or <computeroutput>none</computeroutput> if it is not available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="309" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1application__dirs_1a2523855bb47cadb2a77c10fa2351ba67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::filesystem::path &gt; const  &amp;</type>
        <definition>std::optional&lt;std::filesystem::path&gt; const&amp; state_dir</definition>
        <argsstring>() const</argsstring>
        <name>state_dir</name>
        <briefdescription>
<para>Returns the path to the project&apos;s state directory. </para>
        </briefdescription>
        <detaileddescription>
<para>The state directory contains data that should be retained between sessions (unlike the runtime directory), but may not be important/portable enough to be synchronized across machines (unlike the config/preferences/data directories).<linebreak/>
 Values on different platforms: <itemizedlist>
<listitem>
<para><bold>Linux</bold>: <computeroutput>$XDG_STATE_HOME</computeroutput>/<computeroutput>project_path</computeroutput> or <computeroutput>$HOME</computeroutput>/.local/state/<computeroutput>project_path</computeroutput>, for example: <computeroutput>/home/alice/.local/state/barapp</computeroutput> </para>
</listitem>
<listitem>
<para><bold>MacOS</bold>: - </para>
</listitem>
<listitem>
<para><bold>Windows</bold>: - </para>
</listitem>
</itemizedlist>
<simplesect kind="note"><para>Only for Linux. </para>
</simplesect>
<simplesect kind="return"><para>The path to the project&apos;s state directory or <computeroutput>none</computeroutput> if it is not available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/directories.h" line="327" column="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for getting location of system directories for a specific application. </para>
    </briefdescription>
    <detaileddescription>
<para>ProjectDirs computes the location of cache, config or data directories for a specific application, which are derived from the standard directories and the name of the project/organization.</para>
<para>For example if user named <emphasis>Alice</emphasis>, the following code: <programlisting filename=".cpp"><codeline><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classrolly_1_1application__dirs" kindref="compound">rolly::application_dirs</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75" kindref="member">rolly::application_dirs::dir</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dirs<sp/>=<sp/><ref refid="classrolly_1_1application__dirs_1a55c0e5e3ac7e710af26c992fd49dec50" kindref="member">application_dirs</ref>(</highlight><highlight class="stringliteral">&quot;com&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Foo<sp/>Corp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Bar<sp/>App&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/>dirs[config].string()<sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::endl</ref>;<sp/></highlight><highlight class="comment">//<sp/>or<sp/>std::cout<sp/>&lt;&lt;<sp/>dirs.config_dir()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
</programlisting> will produce the following output: <programlisting filename=".shell-session"><codeline><highlight class="normal">Linux:<sp/><sp/><sp/>&apos;/home/alice/.config/barapp&apos;</highlight></codeline>
<codeline><highlight class="normal">Windows:<sp/>&apos;C:\\Users\\Alice\\AppData\\Roaming\\Foo<sp/>Corp\\Bar<sp/>App&apos;</highlight></codeline>
<codeline><highlight class="normal">MacOS:<sp/><sp/><sp/>&apos;/Users/Alice/Library/Application<sp/>Support/com.Foo-Corp.Bar-App&apos;</highlight></codeline>
</programlisting> <simplesect kind="see"><para><ref refid="classrolly_1_1dirs" kindref="compound">dirs</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/rolly/directories.h" line="58" column="25" bodyfile="include/rolly/directories.h" bodystart="58" bodyend="339"/>
    <listofallmembers>
      <member refid="classrolly_1_1application__dirs_1a55c0e5e3ac7e710af26c992fd49dec50" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>application_dirs</name></member>
      <member refid="classrolly_1_1application__dirs_1a9d30264f6f4177a75053575e5e04f771" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>application_dirs</name></member>
      <member refid="classrolly_1_1application__dirs_1a16a0cf395395ae824d875bd7e6d8a842" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>cache_dir</name></member>
      <member refid="classrolly_1_1application__dirs_1a8708b6187e9976237b9516c21aadf822" prot="private" virt="non-virtual"><scope>rolly::application_dirs</scope><name>cache_dir_</name></member>
      <member refid="classrolly_1_1application__dirs_1a59c6f1acf971116e29638f2603ddab24" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>config_dir</name></member>
      <member refid="classrolly_1_1application__dirs_1aaba55b6678ac34ecd42f5e3b0646d126" prot="private" virt="non-virtual"><scope>rolly::application_dirs</scope><name>config_dir_</name></member>
      <member refid="classrolly_1_1application__dirs_1af397d204a53b4d8663cab8fe3290f7e4" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>config_local_dir</name></member>
      <member refid="classrolly_1_1application__dirs_1a14a686f4d5a0cfdfd7fc17aa4d34ecde" prot="private" virt="non-virtual"><scope>rolly::application_dirs</scope><name>config_local_dir_</name></member>
      <member refid="classrolly_1_1application__dirs_1a2d42730a391790d4be3c9fe14af5327e" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>create</name></member>
      <member refid="classrolly_1_1application__dirs_1a4bc1b913553cb31ddf0c37cc55c6c4c5" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>data_dir</name></member>
      <member refid="classrolly_1_1application__dirs_1a93e41434d609c7f2a1a54d414af96a56" prot="private" virt="non-virtual"><scope>rolly::application_dirs</scope><name>data_dir_</name></member>
      <member refid="classrolly_1_1application__dirs_1a9515233f07cdc7f8626c6e85e2ff6fe2" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>data_local_dir</name></member>
      <member refid="classrolly_1_1application__dirs_1acd8e104438a18f60bd7b83ef7dd37181" prot="private" virt="non-virtual"><scope>rolly::application_dirs</scope><name>data_local_dir_</name></member>
      <member refid="classrolly_1_1application__dirs_1aa671c41b56810ab4bfd94587e8507a75" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>dir</name></member>
      <member refid="classrolly_1_1application__dirs_1a877c175fe97261a9b214ed7152481482" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>get</name></member>
      <member refid="classrolly_1_1application__dirs_1a00ff1719edd03ad0aff4a10010eb503b" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>operator[]</name></member>
      <member refid="classrolly_1_1application__dirs_1ac0c60c9ab055e4fbe6e2faecd6722a9a" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>preference_dir</name></member>
      <member refid="classrolly_1_1application__dirs_1a31b336dba18a4108e441e83c8a732e27" prot="private" virt="non-virtual"><scope>rolly::application_dirs</scope><name>preference_dir_</name></member>
      <member refid="classrolly_1_1application__dirs_1a30e2c864bb359337268ceea8388e6a70" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>project_path</name></member>
      <member refid="classrolly_1_1application__dirs_1a681fc158b6f93bad55aac0dcf2b4dff4" prot="private" virt="non-virtual"><scope>rolly::application_dirs</scope><name>project_path_</name></member>
      <member refid="classrolly_1_1application__dirs_1a83b6c3587991d0a3afeac89f2c61de17" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>remove</name></member>
      <member refid="classrolly_1_1application__dirs_1a559edd679316c7ced41fef5119788cef" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>runtime_dir</name></member>
      <member refid="classrolly_1_1application__dirs_1a14e4a14d14983d8f904f4901b7e048ee" prot="private" virt="non-virtual"><scope>rolly::application_dirs</scope><name>runtime_dir_</name></member>
      <member refid="classrolly_1_1application__dirs_1a2523855bb47cadb2a77c10fa2351ba67" prot="public" virt="non-virtual"><scope>rolly::application_dirs</scope><name>state_dir</name></member>
      <member refid="classrolly_1_1application__dirs_1a4aa7f02371f0ad22bd13d2c80f0da1e9" prot="private" virt="non-virtual"><scope>rolly::application_dirs</scope><name>state_dir_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrolly_1_1observer__ptr" kind="class" language="C++" prot="public">
    <compoundname>rolly::observer_ptr</compoundname>
    <includes refid="observer__ptr_8h" local="no">rolly/memory/observer_ptr.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrolly_1_1observer__ptr_1ab09edc4b568d547d04da66f947f5595a" prot="public" static="no">
        <type>T</type>
        <definition>using element_type =  T</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <briefdescription>
<para>The element type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="39" column="5" bodyfile="rolly/memory/observer_ptr.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrolly_1_1observer__ptr_1ab088798d28525c0befe3c707b95c5bc2" prot="public" static="no">
        <type>T *</type>
        <definition>using pointer =  T*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
<para>The pointer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="44" column="5" bodyfile="rolly/memory/observer_ptr.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrolly_1_1observer__ptr_1ada8ef625b97396676e3e2303a84535be" prot="public" static="no">
        <type>T const  *</type>
        <definition>using const_pointer =  T const*</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
<para>The const pointer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="49" column="5" bodyfile="rolly/memory/observer_ptr.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrolly_1_1observer__ptr_1a0c5a1541ecf7ad17925583cf6abd2c65" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using reference =  T&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
<para>The reference type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="54" column="5" bodyfile="rolly/memory/observer_ptr.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrolly_1_1observer__ptr_1af73227c77834d27f9c89e0a92ea698d8" prot="public" static="no">
        <type>T const  &amp;</type>
        <definition>using const_reference =  T const&amp;</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
<para>The const reference type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="59" column="5" bodyfile="rolly/memory/observer_ptr.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrolly_1_1observer__ptr_1a31c872a1c5784bf8eb67039d36047f6c" prot="public" static="no">
        <type>std::remove_cv_t&lt; T &gt;</type>
        <definition>using value_type =  std::remove_cv_t&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>The value type. Equivalent to the element type without cv-qualifiers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="64" column="5" bodyfile="rolly/memory/observer_ptr.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrolly_1_1observer__ptr_1a8f92701a76e2e28cc3b6bb3c9e7794a4" prot="private" static="no" mutable="no">
        <type><ref refid="classrolly_1_1observer__ptr_1ab088798d28525c0befe3c707b95c5bc2" kindref="member">pointer</ref></type>
        <definition>pointer ptr_</definition>
        <argsstring></argsstring>
        <name>ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="216" column="13" bodyfile="rolly/memory/observer_ptr.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a8fd2758495c7d39b4f7e9c9a7a2affdf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr observer_ptr</definition>
        <argsstring>() noexcept</argsstring>
        <name>observer_ptr</name>
        <briefdescription>
<para>Constructs <computeroutput>nullptr</computeroutput> observer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="69" column="15" bodyfile="rolly/memory/observer_ptr.h" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a7db273aa4945dc39fe351d7616f5f814" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr observer_ptr</definition>
        <argsstring>(std::nullptr_t) noexcept</argsstring>
        <name>observer_ptr</name>
        <param>
          <type><ref refid="cpp/types/nullptr_t" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::nullptr_t</ref></type>
        </param>
        <briefdescription>
<para>Constructs <computeroutput>nullptr</computeroutput> observer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="75" column="15" bodyfile="rolly/memory/observer_ptr.h" bodystart="75" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a0735d4b4c42a4327cf8ae6d1d88359eb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr observer_ptr</definition>
        <argsstring>(pointer ptr) noexcept</argsstring>
        <name>observer_ptr</name>
        <param>
          <type><ref refid="classrolly_1_1observer__ptr_1ab088798d28525c0befe3c707b95c5bc2" kindref="member">pointer</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Constructs an observer from a pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to construct from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="82" column="15" bodyfile="rolly/memory/observer_ptr.h" bodystart="82" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1aae0f7514210dafde3695c0aa984f9ae7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr observer_ptr</definition>
        <argsstring>(observer_ptr&lt; U &gt; const &amp;other) noexcept</argsstring>
        <name>observer_ptr</name>
        <param>
          <type><ref refid="classrolly_1_1observer__ptr" kindref="compound">observer_ptr</ref>&lt; U &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Constructs an observer from another observer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the other observer. Must be convertible to <computeroutput>T*</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Observer to construct from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="100" column="15" bodyfile="rolly/memory/observer_ptr.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1afd0d8fef5e2e709ecfe34e465412be05" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr observer_ptr</definition>
        <argsstring>(std::unique_ptr&lt; U &gt; const &amp;other) noexcept</argsstring>
        <name>observer_ptr</name>
        <param>
          <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; U &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Constructs an observer from a unique pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Underlying type of the unique pointer. Must be convertible to <computeroutput>T*</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique pointer to construct from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="119" column="15" bodyfile="rolly/memory/observer_ptr.h" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a8888e9dd9db1435a172232db23e264c1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr observer_ptr</definition>
        <argsstring>(box&lt; U &gt; const &amp;other) noexcept</argsstring>
        <name>observer_ptr</name>
        <param>
          <type><ref refid="classrolly_1_1box" kindref="compound">box</ref>&lt; U &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Constructs an observer from a box. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the box. Must be convertible to <computeroutput>T*</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Box to construct from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="138" column="15" bodyfile="rolly/memory/observer_ptr.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a5b3070b1e5da32efba368f18ab9f611c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classrolly_1_1observer__ptr_1ab088798d28525c0befe3c707b95c5bc2" kindref="member">pointer</ref></type>
        <definition>constexpr pointer get</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get</name>
        <briefdescription>
<para>Returns the watched pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The watched pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="146" column="24" bodyfile="rolly/memory/observer_ptr.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a8dd31bf0ddc9809655d6f66827013865" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classrolly_1_1observer__ptr_1af73227c77834d27f9c89e0a92ea698d8" kindref="member">const_reference</ref></type>
        <definition>constexpr const_reference ref</definition>
        <argsstring>() const noexcept</argsstring>
        <name>ref</name>
        <briefdescription>
<para>Returns the constant reference to the watched object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the watched object. </para>
</simplesect>
<simplesect kind="invariant"><para>The watched pointer is not <computeroutput>nullptr</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="153" column="32" bodyfile="rolly/memory/observer_ptr.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a14bee89e538427a25cc1e361d8a86140" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classrolly_1_1observer__ptr_1a0c5a1541ecf7ad17925583cf6abd2c65" kindref="member">reference</ref></type>
        <definition>constexpr reference ref</definition>
        <argsstring>() noexcept</argsstring>
        <name>ref</name>
        <briefdescription>
<para>Returns the reference to the watched object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the watched object. </para>
</simplesect>
<simplesect kind="invariant"><para>The watched pointer is not <computeroutput>nullptr</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="160" column="26" bodyfile="rolly/memory/observer_ptr.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a95a453b6d6fe6d168aa9748d7bee076c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classrolly_1_1observer__ptr_1a0c5a1541ecf7ad17925583cf6abd2c65" kindref="member">reference</ref></type>
        <definition>constexpr reference operator*</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Returns the dereferenced watched object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the watched object. </para>
</simplesect>
<simplesect kind="invariant"><para>The watched pointer is not <computeroutput>nullptr</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="167" column="26" bodyfile="rolly/memory/observer_ptr.h" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a4d87e2ceab34e71e890d84482bfd5dfa" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classrolly_1_1observer__ptr_1ab088798d28525c0befe3c707b95c5bc2" kindref="member">pointer</ref></type>
        <definition>constexpr pointer operator-&gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Returns the pointer to the watched object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The pointer to the watched object. </para>
</simplesect>
<simplesect kind="invariant"><para>The watched pointer is not <computeroutput>nullptr</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="177" column="24" bodyfile="rolly/memory/observer_ptr.h" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a420e60e9788bfa3b52aa3aab72ea3a5e" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the watched pointer is not <computeroutput>nullptr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="185" column="15" bodyfile="rolly/memory/observer_ptr.h" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a5ea4d6faed311cd6bf7af821ef2f038e" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>operator pointer</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator pointer</name>
        <briefdescription>
<para>Returns the watched pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The watched pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="191" column="15" bodyfile="rolly/memory/observer_ptr.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1a6a68b7063d23d1c5ff1dcd0cdd33ec36" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classrolly_1_1observer__ptr_1ab088798d28525c0befe3c707b95c5bc2" kindref="member">pointer</ref></type>
        <definition>constexpr pointer release</definition>
        <argsstring>() noexcept</argsstring>
        <name>release</name>
        <briefdescription>
<para>Returns the watched pointer and resets the watched pointer to <computeroutput>nullptr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The watched pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="197" column="23" bodyfile="rolly/memory/observer_ptr.h" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1af9f22cb37d3edae4b12382631e95ec76" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void reset</definition>
        <argsstring>(pointer ptr=nullptr) noexcept</argsstring>
        <name>reset</name>
        <param>
          <type><ref refid="classrolly_1_1observer__ptr_1ab088798d28525c0befe3c707b95c5bc2" kindref="member">pointer</ref></type>
          <declname>ptr</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Resets the watched pointer to <computeroutput>nullptr</computeroutput> or the new watched pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The new watched pointer. Defaults to <computeroutput>nullptr</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="207" column="20" bodyfile="rolly/memory/observer_ptr.h" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1adf6f1fb30d64991e6bf834d69bc34018" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void swap</definition>
        <argsstring>(observer_ptr &amp;other) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classrolly_1_1observer__ptr" kindref="compound">observer_ptr</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swaps two watched pointers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other observer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="213" column="20" bodyfile="rolly/memory/observer_ptr.h" bodystart="213" bodyend="213"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classrolly_1_1observer__ptr_1ac869794e3e52c6f5416d5ebc7d720767" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(rolly::observer_ptr&lt; T &gt; &amp;lhs, rolly::observer_ptr&lt; T &gt; &amp;rhs) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classrolly_1_1observer__ptr" kindref="compound">rolly::observer_ptr</ref>&lt; T &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classrolly_1_1observer__ptr" kindref="compound">rolly::observer_ptr</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Swaps two pointers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the watched pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>First pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Second pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/memory/observer_ptr.h" line="264" column="8" bodyfile="rolly/memory/observer_ptr.h" bodystart="264" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A smart pointer that holds a pointer to a value, but does not own it. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classrolly_1_1observer__ptr" kindref="compound">observer_ptr</ref> is a non-owning pointer, or observer. The observer stores a pointer to a second object, known as the watched object. An <ref refid="classrolly_1_1observer__ptr" kindref="compound">observer_ptr</ref> may also have no watched object.</para>
<para>An observer is not responsible in any way for the watched object; there is no inherent relationship between an observer and the object it watches.</para>
<para>It is intended as a near drop-in replacement for raw pointer types, with the advantage that, as a vocabulary type, it indicates its intended use without need for detailed analysis by code readers.</para>
<para><simplesect kind="remark"><para>This is a reimplementation of the LF TSv2 <computeroutput>std::observer_ptr</computeroutput> type. </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="https://en.cppreference.com/w/cpp/experimental/observer_ptr">https://en.cppreference.com/w/cpp/experimental/observer_ptr</ulink> </para>
</simplesect>
<simplesect kind="version"><para>2.1.31 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="rolly/memory/observer_ptr.h" line="34" column="21" bodyfile="rolly/memory/observer_ptr.h" bodystart="34" bodyend="217"/>
    <listofallmembers>
      <member refid="classrolly_1_1observer__ptr_1ada8ef625b97396676e3e2303a84535be" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>const_pointer</name></member>
      <member refid="classrolly_1_1observer__ptr_1af73227c77834d27f9c89e0a92ea698d8" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>const_reference</name></member>
      <member refid="classrolly_1_1observer__ptr_1ab09edc4b568d547d04da66f947f5595a" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>element_type</name></member>
      <member refid="classrolly_1_1observer__ptr_1a5b3070b1e5da32efba368f18ab9f611c" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>get</name></member>
      <member refid="classrolly_1_1observer__ptr_1a8fd2758495c7d39b4f7e9c9a7a2affdf" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>observer_ptr</name></member>
      <member refid="classrolly_1_1observer__ptr_1a7db273aa4945dc39fe351d7616f5f814" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>observer_ptr</name></member>
      <member refid="classrolly_1_1observer__ptr_1a0735d4b4c42a4327cf8ae6d1d88359eb" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>observer_ptr</name></member>
      <member refid="classrolly_1_1observer__ptr_1aae0f7514210dafde3695c0aa984f9ae7" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>observer_ptr</name></member>
      <member refid="classrolly_1_1observer__ptr_1afd0d8fef5e2e709ecfe34e465412be05" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>observer_ptr</name></member>
      <member refid="classrolly_1_1observer__ptr_1a8888e9dd9db1435a172232db23e264c1" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>observer_ptr</name></member>
      <member refid="classrolly_1_1observer__ptr_1a420e60e9788bfa3b52aa3aab72ea3a5e" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>operator bool</name></member>
      <member refid="classrolly_1_1observer__ptr_1a5ea4d6faed311cd6bf7af821ef2f038e" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>operator pointer</name></member>
      <member refid="classrolly_1_1observer__ptr_1a95a453b6d6fe6d168aa9748d7bee076c" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>operator*</name></member>
      <member refid="classrolly_1_1observer__ptr_1a4d87e2ceab34e71e890d84482bfd5dfa" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>operator-&gt;</name></member>
      <member refid="classrolly_1_1observer__ptr_1ab088798d28525c0befe3c707b95c5bc2" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>pointer</name></member>
      <member refid="classrolly_1_1observer__ptr_1a8f92701a76e2e28cc3b6bb3c9e7794a4" prot="private" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>ptr_</name></member>
      <member refid="classrolly_1_1observer__ptr_1a8dd31bf0ddc9809655d6f66827013865" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>ref</name></member>
      <member refid="classrolly_1_1observer__ptr_1a14bee89e538427a25cc1e361d8a86140" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>ref</name></member>
      <member refid="classrolly_1_1observer__ptr_1a0c5a1541ecf7ad17925583cf6abd2c65" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>reference</name></member>
      <member refid="classrolly_1_1observer__ptr_1a6a68b7063d23d1c5ff1dcd0cdd33ec36" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>release</name></member>
      <member refid="classrolly_1_1observer__ptr_1af9f22cb37d3edae4b12382631e95ec76" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>reset</name></member>
      <member refid="classrolly_1_1observer__ptr_1adf6f1fb30d64991e6bf834d69bc34018" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>swap</name></member>
      <member refid="classrolly_1_1observer__ptr_1ac869794e3e52c6f5416d5ebc7d720767" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>swap</name></member>
      <member refid="classrolly_1_1observer__ptr_1a31c872a1c5784bf8eb67039d36047f6c" prot="public" virt="non-virtual"><scope>rolly::observer_ptr</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrolly_1_1box" kind="class" language="C++" prot="public">
    <compoundname>rolly::box</compoundname>
    <basecompoundref refid="structrolly_1_1noncopyable" prot="private" virt="non-virtual">noncopyable</basecompoundref>
    <includes refid="box_8h" local="no">box.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrolly_1_1box_1afb9ded5f49336ae503bb9f2035ea902b" prot="public" static="no">
        <type>T</type>
        <definition>using value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="27" column="5" bodyfile="include/rolly/memory/box.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrolly_1_1box_1ab09edc4b568d547d04da66f947f5595a" prot="public" static="no">
        <type>T</type>
        <definition>using element_type =  T</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="28" column="5" bodyfile="include/rolly/memory/box.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrolly_1_1box_1a9355fafce9b30f1d22998fb64687c30d" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; T &gt;</type>
        <definition>std::unique_ptr&lt;T&gt; ptr_</definition>
        <argsstring></argsstring>
        <name>ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="265" column="21" bodyfile="include/rolly/memory/box.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrolly_1_1box_1aa4b5aceb8fa96bcafa0ab2036c2ce26e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>box</definition>
        <argsstring>()</argsstring>
        <name>box</name>
        <briefdescription>
<para>Creates an box with default-constructed data of type <computeroutput>T</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="33" column="5" bodyfile="include/rolly/memory/box.h" bodystart="33" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a7ac02901885f54462b91c3d36f2e24d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~box</definition>
        <argsstring>()=default</argsstring>
        <name>~box</name>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="39" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1afedba7a5968b231fd3cd82508b5efa6c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>box</definition>
        <argsstring>(box &amp;&amp;) noexcept=default</argsstring>
        <name>box</name>
        <param>
          <type><ref refid="classrolly_1_1box" kindref="compound">box</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Default move constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="44" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1ad8cc9017530df9d616762f4e8ba1139b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>box</definition>
        <argsstring>(box&lt; U &gt; &amp;&amp;other) noexcept</argsstring>
        <name>box</name>
        <param>
          <type><ref refid="classrolly_1_1box" kindref="compound">box</ref>&lt; U &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Moves data from another box. </para>
        </briefdescription>
        <detaileddescription>
<para>Takes ownership of the other box&apos;s data. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Underlying type of the other box. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other box to move data from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="53" column="5" bodyfile="include/rolly/memory/box.h" bodystart="53" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a3b66668b7010400ebea47b9155b031a6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classrolly_1_1box" kindref="compound">box</ref>&lt; T &gt; &amp;</type>
        <definition>box&lt;T&gt;&amp; operator=</definition>
        <argsstring>(box&lt; U &gt; &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classrolly_1_1box" kindref="compound">box</ref>&lt; U &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Moves data from another box. </para>
        </briefdescription>
        <detaileddescription>
<para>Takes ownership of the other box&apos;s data. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Underlying type of the other box. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other box to move data from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to this box. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="64" column="9" bodyfile="include/rolly/memory/box.h" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a8cd3929c3ea66c2b5595f0b1d78c03f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
<para>Returns a mutable pointer to the underlying data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mutable pointer to the underlying data. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="75" column="8" bodyfile="include/rolly/memory/box.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1ac051b2568208e363ae2dffb23c0ad9ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Returns a mutable pointer to the underlying data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mutable pointer to the underlying data. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="85" column="8" bodyfile="include/rolly/memory/box.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a6515c80d735a21e8856e4bb23b0a567a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* ptr_mut</definition>
        <argsstring>()</argsstring>
        <name>ptr_mut</name>
        <briefdescription>
<para>Returns a mutable pointer to the underlying data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mutable pointer to the underlying data. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="95" column="8" bodyfile="include/rolly/memory/box.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a6acb58d65ee42c3c8bcb8dd90744d97d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  *</type>
        <definition>T const* ptr</definition>
        <argsstring>() const</argsstring>
        <name>ptr</name>
        <briefdescription>
<para>Returns an immutable pointer to the underlying data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Immutable pointer to the underlying data. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="105" column="14" bodyfile="include/rolly/memory/box.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a5a0863e21136211332e1a7863fa24ee5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; ref_mut</definition>
        <argsstring>()</argsstring>
        <name>ref_mut</name>
        <briefdescription>
<para>Returns a mutable reference to the underlying object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A mutable reference to the underlying object. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="115" column="8" bodyfile="include/rolly/memory/box.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a6d3b10a0ba40d65439bc64e33ec1ff5d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>T const&amp; ref</definition>
        <argsstring>() const</argsstring>
        <name>ref</name>
        <briefdescription>
<para>Returns an immutable reference to the underlying object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An immutable reference to the underlying object. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="125" column="14" bodyfile="include/rolly/memory/box.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1af7f8c6b921dca2b94f6e7ee14e762770" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Returns an mutable reference to the underlying object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An mutable reference to the underlying object. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="135" column="8" bodyfile="include/rolly/memory/box.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a8ec41dd70ff70ec41c5f17918604b3ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>T const&amp; operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Returns an immutable reference to the underlying object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An immutable reference to the underlying object. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="145" column="14" bodyfile="include/rolly/memory/box.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1af6e485beee07fd401de29c8cdf898c69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Returns the underlying object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to the underlying object. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="155" column="8" bodyfile="include/rolly/memory/box.h" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a5c1735ebb61cb9b40f6d0ed30be8a288" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Returns the underlying object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to the underlying object. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="165" column="8" bodyfile="include/rolly/memory/box.h" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a6b85f584a4a8c1b98b84e1ab81a670ae" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; T &gt; &amp;</type>
        <definition>std::unique_ptr&lt;T&gt;&amp; as_unique_ptr</definition>
        <argsstring>() noexcept</argsstring>
        <name>as_unique_ptr</name>
        <briefdescription>
<para>Returns the underlying unique pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="173" column="22" bodyfile="include/rolly/memory/box.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a292afa7d9b939b261835165270ccb828" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; T &gt; const  &amp;</type>
        <definition>std::unique_ptr&lt;T&gt; const&amp; as_unique_ptr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>as_unique_ptr</name>
        <briefdescription>
<para>Returns the constant underlying unique pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="178" column="28" bodyfile="include/rolly/memory/box.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* leak</definition>
        <argsstring>() noexcept</argsstring>
        <name>leak</name>
        <briefdescription>
<para>Consumes and leaks the box, returning a mutable pointer to the underlying object. </para>
        </briefdescription>
        <detaileddescription>
<para>The caller is responsible for freeing the memory by calling deleter on the returned pointer. <simplesect kind="note"><para>Calling this function leaves this box in an invalid state. Trying to use it afterwards will result in contract violation. </para>
</simplesect>
<simplesect kind="return"><para>Mutable unmanaged pointer to the underlying object or <computeroutput>nullptr</computeroutput> if the box is already consumed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="188" column="8" bodyfile="include/rolly/memory/box.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a0752489c60608212fdfd8a66ae0c90ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>std::optional&lt; <ref refid="cpp/utility/functional/reference_wrapper" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::reference_wrapper</ref>&lt; U &gt; &gt;</type>
        <definition>std::optional&lt;std::reference_wrapper&lt;U&gt; &gt; downcast</definition>
        <argsstring>()</argsstring>
        <name>downcast</name>
        <briefdescription>
<para>Tries to downcast the underlying pointer to the given type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to cast to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An optional containing a reference to the casted underlying object if successful, <computeroutput>std::nullopt</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="198" column="20" bodyfile="include/rolly/memory/box.h" bodystart="198" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a821c701c77d3231e978182beedefb8a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>U *</type>
        <definition>U* as</definition>
        <argsstring>()</argsstring>
        <name>as</name>
        <briefdescription>
<para>Casts the underlying pointer to the given type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to cast to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the casted underlying object. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="217" column="8" bodyfile="include/rolly/memory/box.h" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a246ff03289ee9a88e936eafb6bd7b026" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>U const  *</type>
        <definition>U const* as</definition>
        <argsstring>() const</argsstring>
        <name>as</name>
        <briefdescription>
<para>Casts the underlying pointer to the immutable given type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to cast to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An constant pointer to the casted underlying object. </para>
</simplesect>
<simplesect kind="invariant"><para><computeroutput><ref refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" kindref="member">box::leak</ref></computeroutput> was not called before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="229" column="14" bodyfile="include/rolly/memory/box.h" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a420e60e9788bfa3b52aa3aab72ea3a5e" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the box is not consumed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="237" column="15" bodyfile="include/rolly/memory/box.h" bodystart="237" bodyend="237"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrolly_1_1box_1a3a38fffc60700f0adc5c350b7760b89f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classrolly_1_1box" kindref="compound">box</ref>&lt; T &gt;</type>
        <definition>static box&lt;T&gt; make</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>make</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Creates a new box from given arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Constructor arguments type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Constructor arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>box</computeroutput> constructed from <computeroutput>args</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="246" column="17" bodyfile="include/rolly/memory/box.h" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1a07aa0f8c95fa45034be5f9d7f123c940" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classrolly_1_1box" kindref="compound">box</ref>&lt; T &gt;</type>
        <definition>static box&lt;T&gt; make</definition>
        <argsstring>(std::unique_ptr&lt; T &gt; ptr) noexcept(false)</argsstring>
        <name>make</name>
        <param>
          <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; T &gt;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Creates a new box from <computeroutput><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref></computeroutput> to construct from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ptr</computeroutput> must not be null. </para>
</simplesect>
<simplesect kind="return"><para><computeroutput>box</computeroutput> constructed from <computeroutput>ptr</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="256" column="17" bodyfile="include/rolly/memory/box.h" bodystart="256" bodyend="259"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrolly_1_1box_1a0c1fd9156b859a52a4928f84cefd6777" prot="private" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>box</definition>
        <argsstring>(std::unique_ptr&lt; T &gt; &amp;&amp;_ptr) noexcept</argsstring>
        <name>box</name>
        <param>
          <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="262" column="14" bodyfile="include/rolly/memory/box.h" bodystart="262" bodyend="263"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classrolly_1_1box_1a3760e8162b1f9666221102a3c86866e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classrolly_1_1box" kindref="compound">box</ref>&lt; T &gt;</type>
        <definition>box&lt; T &gt; make_box</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>make_box</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Creates a new box with the given arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the box underlying data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Constructor arguments type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments to the constructor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new box with the given arguments. </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://en.cppreference.com/w/cpp/memory/make_unique">http://en.cppreference.com/w/cpp/memory/make_unique</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="278" column="8" bodyfile="include/rolly/memory/box.h" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1box_1ab9d725bfb8d8ec7fb6fbcb81747dfec6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(rolly::box&lt; T &gt; &amp;a, rolly::box&lt; T &gt; &amp;b) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classrolly_1_1box" kindref="compound">rolly::box</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classrolly_1_1box" kindref="compound">rolly::box</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Swaps two <computeroutput>box</computeroutput>es. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Underlying type of the <computeroutput>box</computeroutput>es. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>First <computeroutput>box</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second <computeroutput>box</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://en.cppreference.com/w/cpp/memory/swap">http://en.cppreference.com/w/cpp/memory/swap</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/box.h" line="327" column="9" bodyfile="include/rolly/memory/box.h" bodystart="327" bodyend="329"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Owning unique smart pointer which can never be null. </para>
    </briefdescription>
    <detaileddescription>
<para>The box class behaves very similarly to the <computeroutput><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref></computeroutput> class, but unlike the <computeroutput><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref></computeroutput>, it is 100% guaranteed to be filled at all times (unless the user tries to access it after calling <ref refid="cpp/utility/move" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::move</ref> does something else that is clearly a bad idea).</para>
<para>Reference implementation is taken from the <bold>reflect-cpp</bold> library.</para>
<para>API reference matches (almost) the Rust Language implementation. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of data stored in the box. Must fulfill <computeroutput>std::destructible</computeroutput> requirement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="https://github.com/getml/reflect-cpp/blob/main/include/rfl/Box.hpp">https://github.com/getml/reflect-cpp/blob/main/include/rfl/Box.hpp</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://doc.rust-lang.org/std/boxed/struct.Box.html">https://doc.rust-lang.org/std/boxed/struct.Box.html</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>noncopyable</label>
        <link refid="structrolly_1_1noncopyable"/>
      </node>
      <node id="1">
        <label>box&lt; T &gt;</label>
        <link refid="classrolly_1_1box"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>noncopyable</label>
        <link refid="structrolly_1_1noncopyable"/>
      </node>
      <node id="1">
        <label>box&lt; T &gt;</label>
        <link refid="classrolly_1_1box"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/rolly/memory/box.h" line="25" column="1" bodyfile="include/rolly/memory/box.h" bodystart="24" bodyend="266"/>
    <listofallmembers>
      <member refid="classrolly_1_1box_1a821c701c77d3231e978182beedefb8a4" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>as</name></member>
      <member refid="classrolly_1_1box_1a246ff03289ee9a88e936eafb6bd7b026" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>as</name></member>
      <member refid="classrolly_1_1box_1a6b85f584a4a8c1b98b84e1ab81a670ae" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>as_unique_ptr</name></member>
      <member refid="classrolly_1_1box_1a292afa7d9b939b261835165270ccb828" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>as_unique_ptr</name></member>
      <member refid="classrolly_1_1box_1aa4b5aceb8fa96bcafa0ab2036c2ce26e" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>box</name></member>
      <member refid="classrolly_1_1box_1afedba7a5968b231fd3cd82508b5efa6c" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>box</name></member>
      <member refid="classrolly_1_1box_1ad8cc9017530df9d616762f4e8ba1139b" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>box</name></member>
      <member refid="classrolly_1_1box_1a0c1fd9156b859a52a4928f84cefd6777" prot="private" virt="non-virtual"><scope>rolly::box</scope><name>box</name></member>
      <member refid="classrolly_1_1box_1a0752489c60608212fdfd8a66ae0c90ba" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>downcast</name></member>
      <member refid="classrolly_1_1box_1ab09edc4b568d547d04da66f947f5595a" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>element_type</name></member>
      <member refid="classrolly_1_1box_1a8cd3929c3ea66c2b5595f0b1d78c03f7" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>get</name></member>
      <member refid="classrolly_1_1box_1ac051b2568208e363ae2dffb23c0ad9ba" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>get</name></member>
      <member refid="classrolly_1_1box_1a9e0803457f22fb3201520a7e00be7fca" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>leak</name></member>
      <member refid="classrolly_1_1box_1a3a38fffc60700f0adc5c350b7760b89f" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>make</name></member>
      <member refid="classrolly_1_1box_1a07aa0f8c95fa45034be5f9d7f123c940" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>make</name></member>
      <member refid="classrolly_1_1box_1a3760e8162b1f9666221102a3c86866e9" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>make_box</name></member>
      <member refid="classrolly_1_1box_1a420e60e9788bfa3b52aa3aab72ea3a5e" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>operator bool</name></member>
      <member refid="classrolly_1_1box_1af7f8c6b921dca2b94f6e7ee14e762770" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>operator*</name></member>
      <member refid="classrolly_1_1box_1a8ec41dd70ff70ec41c5f17918604b3ad" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>operator*</name></member>
      <member refid="classrolly_1_1box_1af6e485beee07fd401de29c8cdf898c69" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>operator-&gt;</name></member>
      <member refid="classrolly_1_1box_1a5c1735ebb61cb9b40f6d0ed30be8a288" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>operator-&gt;</name></member>
      <member refid="classrolly_1_1box_1a3b66668b7010400ebea47b9155b031a6" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>operator=</name></member>
      <member refid="structrolly_1_1noncopyable_1abf5d0a96e554770dbe7f2470901b23f8" prot="private" virt="non-virtual" ambiguityscope="rolly::noncopyable::"><scope>rolly::box</scope><name>operator=</name></member>
      <member refid="classrolly_1_1box_1a6acb58d65ee42c3c8bcb8dd90744d97d" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>ptr</name></member>
      <member refid="classrolly_1_1box_1a9355fafce9b30f1d22998fb64687c30d" prot="private" virt="non-virtual"><scope>rolly::box</scope><name>ptr_</name></member>
      <member refid="classrolly_1_1box_1a6515c80d735a21e8856e4bb23b0a567a" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>ptr_mut</name></member>
      <member refid="classrolly_1_1box_1a6d3b10a0ba40d65439bc64e33ec1ff5d" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>ref</name></member>
      <member refid="classrolly_1_1box_1a5a0863e21136211332e1a7863fa24ee5" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>ref_mut</name></member>
      <member refid="classrolly_1_1box_1ab9d725bfb8d8ec7fb6fbcb81747dfec6" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>swap</name></member>
      <member refid="classrolly_1_1box_1afb9ded5f49336ae503bb9f2035ea902b" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>value_type</name></member>
      <member refid="classrolly_1_1box_1a7ac02901885f54462b91c3d36f2e24d4" prot="public" virt="non-virtual"><scope>rolly::box</scope><name>~box</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

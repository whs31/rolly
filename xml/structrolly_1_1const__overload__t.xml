<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structrolly_1_1const__overload__t" kind="struct" language="C++" prot="public">
    <compoundname>rolly::const_overload_t</compoundname>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structrolly_1_1const__overload__t_1a0c5d7b17febdf313a401bb45080df101" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto operator()</definition>
        <argsstring>(R(T::*ptr)(Args...) const) const noexcept -&gt; decltype(ptr)</argsstring>
        <name>operator()</name>
        <param>
          <type>R(T::*)(Args...) const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/overload.h" line="20" column="20" bodyfile="rolly/functional/overload.h" bodystart="20" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structrolly_1_1const__overload__t_1afd14a7e28ff84c3ace3febb49396d781" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto of</definition>
        <argsstring>(R(T::*ptr)(Args...) const) noexcept -&gt; decltype(ptr)</argsstring>
        <name>of</name>
        <param>
          <type>R(T::*)(Args...) const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/overload.h" line="25" column="27" bodyfile="rolly/functional/overload.h" bodystart="25" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>const_overload_t&lt; Args &gt;</label>
        <link refid="structrolly_1_1const__overload__t"/>
      </node>
      <node id="2">
        <label>const_overload_t&lt; Args... &gt;</label>
        <link refid="structrolly_1_1const__overload__t"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Args... &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>overload_t&lt; Args &gt;</label>
        <link refid="structrolly_1_1overload__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="rolly/functional/overload.h" line="18" column="25" bodyfile="rolly/functional/overload.h" bodystart="18" bodyend="28"/>
    <listofallmembers>
      <member refid="structrolly_1_1const__overload__t_1afd14a7e28ff84c3ace3febb49396d781" prot="public" virt="non-virtual"><scope>rolly::const_overload_t</scope><name>of</name></member>
      <member refid="structrolly_1_1const__overload__t_1a0c5d7b17febdf313a401bb45080df101" prot="public" virt="non-virtual"><scope>rolly::const_overload_t</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

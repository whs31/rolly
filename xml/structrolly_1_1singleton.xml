<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structrolly_1_1singleton" kind="struct" language="C++" prot="public">
    <compoundname>rolly::singleton</compoundname>
    <basecompoundref refid="structrolly_1_1pin" prot="public" virt="non-virtual">pin</basecompoundref>
    <includes refid="singleton_8h" local="no">rolly/traits/singleton.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structrolly_1_1singleton_1a6bb8491f2df12f623ddc298edbfb788c" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T *</type>
        <definition>static T* ptr_mut</definition>
        <argsstring>() noexcept</argsstring>
        <name>ptr_mut</name>
        <briefdescription>
<para>Returns <emphasis>mutable pointer</emphasis> to the singleton instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mutable pointer to the singleton instance. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structrolly_1_1singleton_1abb031ad0c88c2300b56966f2fbefe2e1" kindref="member">ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/traits/singleton.h" line="43" column="15" bodyfile="rolly/traits/singleton.h" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structrolly_1_1singleton_1abb031ad0c88c2300b56966f2fbefe2e1" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T const  *</type>
        <definition>static T const* ptr</definition>
        <argsstring>() noexcept</argsstring>
        <name>ptr</name>
        <briefdescription>
<para>Returns <emphasis>pointer</emphasis> to the singleton instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to the singleton instance. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structrolly_1_1singleton_1a6bb8491f2df12f623ddc298edbfb788c" kindref="member">ptr_mut</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/traits/singleton.h" line="53" column="21" bodyfile="rolly/traits/singleton.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structrolly_1_1singleton_1ac16bb149a26982caaa359e84b3ce4f42" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>static T const&amp; ref</definition>
        <argsstring>() noexcept</argsstring>
        <name>ref</name>
        <briefdescription>
<para>Returns <emphasis>constant reference</emphasis> to the singleton instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Constant reference to the singleton instance. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structrolly_1_1singleton_1abf6b2ca64d1ba903a546941f62779d4c" kindref="member">ref_mut</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/traits/singleton.h" line="60" column="21" bodyfile="rolly/traits/singleton.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structrolly_1_1singleton_1abf6b2ca64d1ba903a546941f62779d4c" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>static T&amp; ref_mut</definition>
        <argsstring>() noexcept</argsstring>
        <name>ref_mut</name>
        <briefdescription>
<para>Returns <emphasis>mutable reference</emphasis> to the singleton instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mutable reference to the singleton instance. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structrolly_1_1singleton_1ac16bb149a26982caaa359e84b3ce4f42" kindref="member">ref</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/traits/singleton.h" line="67" column="15" bodyfile="rolly/traits/singleton.h" bodystart="67" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structrolly_1_1singleton_1a3c3d5b0b7cc4cf739ae51f3f8d9bd825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>singleton</definition>
        <argsstring>()=default</argsstring>
        <name>singleton</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/traits/singleton.h" line="69" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Singleton pattern trait. </para>
    </briefdescription>
    <detaileddescription>
<para>Allows to use <bold>Singleton</bold> pattern in custom types and classes. Example declaration:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">TestSingleton<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrolly_1_1singleton" kindref="compound">rolly::singleton</ref>&lt;TestSingleton&gt;</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrolly_1_1singleton" kindref="compound">rolly::singleton</ref>&lt;TestSingleton&gt;;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>~TestSingleton()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>b;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>TestSingleton()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
<para>Example usage: <programlisting filename=".cpp"><codeline><highlight class="normal">TestSingleton::ref().add(1,<sp/>2);</highlight></codeline>
<codeline><highlight class="normal">TestSingleton::ref_mut().add(1,<sp/>2);</highlight></codeline>
<codeline><highlight class="normal">TestSingleton::ptr()-&gt;add(1,<sp/>2);</highlight></codeline>
<codeline><highlight class="normal">TestSingleton::ptr_mut()-&gt;add(1,<sp/>2);</highlight></codeline>
</programlisting> <simplesect kind="note"><para>Produced singleton is thread-safe. </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Class type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>nonmovable</label>
        <link refid="structrolly_1_1nonmovable"/>
      </node>
      <node id="2">
        <label>pin</label>
        <link refid="structrolly_1_1pin"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>singleton&lt; T &gt;</label>
        <link refid="structrolly_1_1singleton"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>noncopyable</label>
        <link refid="structrolly_1_1noncopyable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>nonmovable</label>
        <link refid="structrolly_1_1nonmovable"/>
      </node>
      <node id="2">
        <label>pin</label>
        <link refid="structrolly_1_1pin"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>singleton&lt; T &gt;</label>
        <link refid="structrolly_1_1singleton"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>noncopyable</label>
        <link refid="structrolly_1_1noncopyable"/>
      </node>
    </collaborationgraph>
    <location file="rolly/traits/singleton.h" line="37" column="22" bodyfile="rolly/traits/singleton.h" bodystart="37" bodyend="70"/>
    <listofallmembers>
      <member refid="structrolly_1_1noncopyable_1a9a7cb0757f3a96b9862062e348f20577" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>noncopyable</name></member>
      <member refid="structrolly_1_1noncopyable_1ad5e07eb25f4ba34b072cbccadfe23044" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>noncopyable</name></member>
      <member refid="structrolly_1_1nonmovable_1acc2fa1e57d8a43b308175b5c56e221cd" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>nonmovable</name></member>
      <member refid="structrolly_1_1nonmovable_1add65207e9c46232f479124c747f3abb5" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>nonmovable</name></member>
      <member refid="structrolly_1_1noncopyable_1abf5d0a96e554770dbe7f2470901b23f8" prot="public" virt="non-virtual" ambiguityscope="rolly::"><scope>rolly::singleton</scope><name>operator=</name></member>
      <member refid="structrolly_1_1nonmovable_1a7e86c1b2d7c0aeb233f86cdde473389b" prot="public" virt="non-virtual" ambiguityscope="rolly::nonmovable::"><scope>rolly::singleton</scope><name>operator=</name></member>
      <member refid="structrolly_1_1singleton_1abb031ad0c88c2300b56966f2fbefe2e1" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>ptr</name></member>
      <member refid="structrolly_1_1singleton_1a6bb8491f2df12f623ddc298edbfb788c" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>ptr_mut</name></member>
      <member refid="structrolly_1_1singleton_1ac16bb149a26982caaa359e84b3ce4f42" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>ref</name></member>
      <member refid="structrolly_1_1singleton_1abf6b2ca64d1ba903a546941f62779d4c" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>ref_mut</name></member>
      <member refid="structrolly_1_1singleton_1a3c3d5b0b7cc4cf739ae51f3f8d9bd825" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>singleton</name></member>
      <member refid="structrolly_1_1noncopyable_1a60dec0098f04c2bedcf32fc41e8bd203" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>~noncopyable</name></member>
      <member refid="structrolly_1_1nonmovable_1a4352173bc3c30a542b3c5166f31ebf9b" prot="public" virt="non-virtual"><scope>rolly::singleton</scope><name>~nonmovable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

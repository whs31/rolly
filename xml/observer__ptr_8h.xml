<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="observer__ptr_8h" kind="file" language="C++">
    <compoundname>observer_ptr.h</compoundname>
    <includes local="no">type_traits</includes>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">functional</includes>
    <includes refid="contracts_8h" local="yes">../contracts.h</includes>
    <includes refid="box_8h" local="yes">box.h</includes>
    <includedby refid="memory_8h" local="yes">memory.h</includedby>
    <incdepgraph>
      <node id="15">
        <label>format/ostream_formatter.h</label>
        <link refid="ostream__formatter_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="10">
        <label>fmt/format.h</label>
      </node>
      <node id="20">
        <label>cstdint</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="12">
        <label>export.h</label>
        <link refid="export_8h_source"/>
      </node>
      <node id="13">
        <label>platform_definitions.h</label>
        <link refid="platform__definitions_8h_source"/>
      </node>
      <node id="9">
        <label>string_view</label>
      </node>
      <node id="11">
        <label>global/definitions.h</label>
        <link refid="definitions_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>optional</label>
      </node>
      <node id="21">
        <label>box.h</label>
        <link refid="box_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="17">
        <label>iosfwd</label>
      </node>
      <node id="19">
        <label>cstddef</label>
      </node>
      <node id="24">
        <label>../concepts/ptr.h</label>
        <link refid="ptr_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>source_location.h</label>
        <link refid="source__location_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>../traits/noncopyable.h</label>
        <link refid="noncopyable_8h_source"/>
      </node>
      <node id="7">
        <label>../contracts.h</label>
        <link refid="contracts_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>type_traits</label>
      </node>
      <node id="1">
        <label>observer_ptr.h</label>
        <link refid="observer__ptr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="18">
        <label>types/stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>memory.h</label>
        <link refid="memory_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>observer_ptr.h</label>
        <link refid="observer__ptr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>rolly.h</label>
        <link refid="rolly_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classrolly_1_1observer__ptr" prot="public">rolly::observer_ptr</innerclass>
    <innerclass refid="structstd_1_1hash_3_01rolly_1_1observer__ptr_3_01T_01_4_01_4" prot="public">std::hash&lt; rolly::observer_ptr&lt; T &gt; &gt;</innerclass>
    <innernamespace refid="namespacerolly">rolly</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacerolly_1aabeeaf9aa00d84c95bb09cfd5fd20941" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rolly::operator==</definition>
        <argsstring>(observer_ptr&lt; T &gt; const &amp;lhs, observer_ptr&lt; U &gt; const &amp;rhs) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>observer_ptr&lt; T &gt; const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>observer_ptr&lt; U &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/observer_ptr.h" line="218" column="18" bodyfile="include/rolly/memory/observer_ptr.h" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="namespacerolly_1acd9c29fd1dfc4acb916584a7107c22be" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rolly::operator!=</definition>
        <argsstring>(observer_ptr&lt; T &gt; const &amp;lhs, observer_ptr&lt; U &gt; const &amp;rhs) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>observer_ptr&lt; T &gt; const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>observer_ptr&lt; U &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/observer_ptr.h" line="223" column="18" bodyfile="include/rolly/memory/observer_ptr.h" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="namespacerolly_1ab1df93f72b112c11789cfac379ddee96" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rolly::operator&lt;</definition>
        <argsstring>(observer_ptr&lt; T &gt; const &amp;lhs, observer_ptr&lt; U &gt; const &amp;rhs) noexcept</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>observer_ptr&lt; T &gt; const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>observer_ptr&lt; U &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/observer_ptr.h" line="228" column="13" bodyfile="include/rolly/memory/observer_ptr.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="namespacerolly_1acee4f46a0677c1eec00cb57737ecb713" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rolly::operator&gt;</definition>
        <argsstring>(observer_ptr&lt; T &gt; const &amp;lhs, observer_ptr&lt; U &gt; const &amp;rhs) noexcept</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>observer_ptr&lt; T &gt; const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>observer_ptr&lt; U &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/observer_ptr.h" line="233" column="18" bodyfile="include/rolly/memory/observer_ptr.h" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="namespacerolly_1a7a824308dfef800197ebdca72ca577de" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rolly::operator&lt;=</definition>
        <argsstring>(observer_ptr&lt; T &gt; const &amp;lhs, observer_ptr&lt; U &gt; const &amp;rhs) noexcept</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>observer_ptr&lt; T &gt; const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>observer_ptr&lt; U &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/observer_ptr.h" line="238" column="13" bodyfile="include/rolly/memory/observer_ptr.h" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="namespacerolly_1a563f446fdf15d40728b98c5153cb8632" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rolly::operator&gt;=</definition>
        <argsstring>(observer_ptr&lt; T &gt; const &amp;lhs, observer_ptr&lt; U &gt; const &amp;rhs) noexcept</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>observer_ptr&lt; T &gt; const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>observer_ptr&lt; U &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/observer_ptr.h" line="243" column="18" bodyfile="include/rolly/memory/observer_ptr.h" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="namespacerolly_1a7c4d06266a7101dad5226fe5f296354b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr observer_ptr&lt; T &gt;</type>
        <definition>constexpr observer_ptr&lt;T&gt; rolly::make_observer</definition>
        <argsstring>(T *ptr) noexcept</argsstring>
        <name>make_observer</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/memory/observer_ptr.h" line="248" column="27" bodyfile="include/rolly/memory/observer_ptr.h" bodystart="248" bodyend="250"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/rolly/memory/observer_ptr.h"/>
  </compounddef>
</doxygen>

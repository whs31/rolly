<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structrolly_1_1ostream__formatter" kind="struct" language="C++" prot="public">
    <compoundname>rolly::ostream_formatter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">fmt::formatter&lt; std::basic_string_view&lt; C &gt;, C &gt;</basecompoundref>
    <includes refid="ostream__formatter_8h" local="no">ostream_formatter.h</includes>
    <templateparamlist>
      <param>
        <type>typename C</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structrolly_1_1ostream__formatter_1a530ff3c61e787d95ed7ee018d3a26ca2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt format</definition>
        <argsstring>(T const &amp;value, fmt::basic_format_context&lt; OutputIt, C &gt; &amp;ctx) const</argsstring>
        <name>format</name>
        <param>
          <type>T const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>fmt::basic_format_context&lt; OutputIt, C &gt; &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Required by <computeroutput>fmt</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/format/ostream_formatter.h" line="28" column="14" bodyfile="include/rolly/format/ostream_formatter.h" bodystart="28" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Formatter for types which support stream output. </para>
    </briefdescription>
    <detaileddescription>
<para>Example usage for <computeroutput><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::ostream</ref></computeroutput>: <programlisting filename=".cpp"><codeline><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[maybe_unused]]<sp/>fmt::formatter&lt;YourType&gt;<sp/>:<sp/><ref refid="structrolly_1_1ostream__formatter" kindref="compound">rolly::ostream_formatter</ref>&lt;char&gt;<sp/>{};</highlight></codeline>
</programlisting></para>
<para>Example usage for <computeroutput><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::wostream</ref></computeroutput>: <programlisting filename=".cpp"><codeline><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[maybe_unused]]<sp/>fmt::formatter&lt;YourType&gt;<sp/>:<sp/><ref refid="structrolly_1_1ostream__formatter" kindref="compound">rolly::ostream_formatter</ref>&lt;wchar_t&gt;<sp/>{};</highlight></codeline>
</programlisting> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>Underlying character type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>formatter&lt; rolly::source_location &gt;</label>
        <link refid="structfmt_1_1formatter_3_01rolly_1_1source__location_01_4"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ostream_formatter&lt; C &gt;</label>
        <link refid="structrolly_1_1ostream__formatter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ostream_formatter&lt; char &gt;</label>
        <link refid="structrolly_1_1ostream__formatter"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; char &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>formatter&lt; std::basic_string_view&lt; C &gt;, C &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ostream_formatter&lt; C &gt;</label>
        <link refid="structrolly_1_1ostream__formatter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>formatter&lt; std::basic_string_view&lt; C &gt;, C &gt;</label>
      </node>
    </collaborationgraph>
    <location file="include/rolly/format/ostream_formatter.h" line="23" column="43" bodyfile="include/rolly/format/ostream_formatter.h" bodystart="23" bodyend="33"/>
    <listofallmembers>
      <member refid="structrolly_1_1ostream__formatter_1a530ff3c61e787d95ed7ee018d3a26ca2" prot="public" virt="non-virtual"><scope>rolly::ostream_formatter</scope><name>format</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

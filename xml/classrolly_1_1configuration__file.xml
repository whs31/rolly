<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrolly_1_1configuration__file" kind="class" language="C++" prot="public">
    <compoundname>rolly::configuration_file</compoundname>
    <basecompoundref refid="classrolly_1_1io_1_1filedevice" prot="public" virt="non-virtual">filedevice</basecompoundref>
    <includes refid="config_8h" local="no">config.h</includes>
    <templateparamlist>
      <param>
        <type>typename F</type>
      </param>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrolly_1_1configuration__file_1aa4ade5f7d2e6734f998683439bba9fe1" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="220" column="7" bodyfile="include/rolly/config.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1configuration__file_1a11f2fb119b4de2fafaacbf7911b0997f" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T default_values_</definition>
        <argsstring></argsstring>
        <name>default_values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="221" column="7" bodyfile="include/rolly/config.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1configuration__file_1a097f672d76ba9b94bd6215d465feeb64" prot="private" static="no" mutable="no">
        <type>enum <ref refid="namespacerolly_1ae1e5f60a57661fe4d13cf754e0a8d6ae" kindref="member">saving_policy</ref></type>
        <definition>enum saving_policy saving_policy_</definition>
        <argsstring></argsstring>
        <name>saving_policy_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="221" column="7" bodyfile="include/rolly/config.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrolly_1_1configuration__file_1a2dd81c85c0b7f68b59750ae4441f7da4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool valid_</definition>
        <argsstring></argsstring>
        <name>valid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="223" column="10" bodyfile="include/rolly/config.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrolly_1_1configuration__file_1ab7300f20d215d2e4369770ff4135a113" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>configuration_file</definition>
        <argsstring>(std::filesystem::path path, saving_policy policy)</argsstring>
        <name>configuration_file</name>
        <param>
          <type>std::filesystem::path</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespacerolly_1ae1e5f60a57661fe4d13cf754e0a8d6ae" kindref="member">saving_policy</ref></type>
          <declname>policy</declname>
        </param>
        <briefdescription>
<para>Creates or loads configuration file from given path with saving policy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This constructor will not throw any error, but will return an invalid configuration file. Don&apos;t forget to check if configuration file is valid before using it. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to configuration file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>policy</parametername>
</parameternamelist>
<parameterdescription>
<para>Saving policy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classrolly_1_1configuration__file_1a4c482a82a76a1795230c3b7c795c6522" kindref="member">saving_policy</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classrolly_1_1configuration__file_1a315419f26d3c59fa143b49b90a019049" kindref="member">valid</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="91" column="14" bodyfile="include/rolly/config.h" bodystart="91" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a18451451f7e324f25db86f011a7908a5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>configuration_file</definition>
        <argsstring>(std::string_view filename, std::filesystem::path const &amp;folder, saving_policy policy)</argsstring>
        <name>configuration_file</name>
        <param>
          <type>std::string_view</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>std::filesystem::path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type><ref refid="namespacerolly_1ae1e5f60a57661fe4d13cf754e0a8d6ae" kindref="member">saving_policy</ref></type>
          <declname>policy</declname>
        </param>
        <briefdescription>
<para>Creates or loads configuration file from given path and folder with saving policy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This constructor will not throw any error, but will return an invalid configuration file. Don&apos;t forget to check if configuration file is valid before using it. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename of configuration file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>folder</parametername>
</parameternamelist>
<parameterdescription>
<para>Folder where configuration file is located. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>policy</parametername>
</parameternamelist>
<parameterdescription>
<para>Saving policy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classrolly_1_1configuration__file_1a4c482a82a76a1795230c3b7c795c6522" kindref="member">saving_policy</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classrolly_1_1configuration__file_1a315419f26d3c59fa143b49b90a019049" kindref="member">valid</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="113" column="14" bodyfile="include/rolly/config.h" bodystart="113" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a0c950eff44aa6758331e8ef31b282f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>configuration_file</definition>
        <argsstring>(configuration_file const &amp;)=default</argsstring>
        <name>configuration_file</name>
        <param>
          <type><ref refid="classrolly_1_1configuration__file" kindref="compound">configuration_file</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="116" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1abc103010a13e13273b7ebb6f5abb744c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>configuration_file</definition>
        <argsstring>(configuration_file &amp;&amp;)=default</argsstring>
        <name>configuration_file</name>
        <param>
          <type><ref refid="classrolly_1_1configuration__file" kindref="compound">configuration_file</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="117" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a87744a7d4bc1ae142669345201fd3cff" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type></type>
        <definition>virtual ~configuration_file</definition>
        <argsstring>() noexcept</argsstring>
        <name>~configuration_file</name>
        <briefdescription>
<para>Closes configuration file. </para>
        </briefdescription>
        <detaileddescription>
<para>If saving policy is set to <ref refid="namespacerolly_1ae1e5f60a57661fe4d13cf754e0a8d6aeaf47468435c3051a65ef52dbe8a7838b1" kindref="member">saving_policy::autosave</ref>, file will be saved automatically on closing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="123" column="13" bodyfile="include/rolly/config.h" bodystart="123" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a315419f26d3c59fa143b49b90a019049" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <briefdescription>
<para>Returns whether configuration file is valid or not. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="135" column="11" bodyfile="include/rolly/config.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a4c482a82a76a1795230c3b7c795c6522" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>enum <ref refid="namespacerolly_1ae1e5f60a57661fe4d13cf754e0a8d6ae" kindref="member">saving_policy</ref></type>
        <definition>enum saving_policy saving_policy</definition>
        <argsstring>() const</argsstring>
        <name>saving_policy</name>
        <briefdescription>
<para>Saving policy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="135" column="11" bodyfile="include/rolly/config.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a118d219d09d66ec2576a7bbc31a69d26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>T const&amp; values</definition>
        <argsstring>() const</argsstring>
        <name>values</name>
        <briefdescription>
<para>Constant reference to the current values of configuration file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="145" column="14" bodyfile="include/rolly/config.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a61e8a1bf44a495e3db6ffc8041a87b5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; values_mut</definition>
        <argsstring>()</argsstring>
        <name>values_mut</name>
        <briefdescription>
<para>Mutable reference to the current values of configuration file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="150" column="8" bodyfile="include/rolly/config.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a97f2ce038608c3eea243a200d73abc1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>T const&amp; default_values</definition>
        <argsstring>() const</argsstring>
        <name>default_values</name>
        <briefdescription>
<para>Default values of configuration file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="155" column="14" bodyfile="include/rolly/config.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a4beca5e62db0dc01ba9a5b921725b09d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; default_values_mut</definition>
        <argsstring>()</argsstring>
        <name>default_values_mut</name>
        <briefdescription>
<para>Mutable reference to default values of configuration file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="160" column="8" bodyfile="include/rolly/config.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a96350dbe2693f29fd1fd7e0b44981bf8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void load</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>load</name>
        <briefdescription>
<para>Loads configuration file from file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="cpp/error/exception" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if loading fails. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="166" column="10" bodyfile="include/rolly/config.h" bodystart="166" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1ac09d45cc534c27373744e2472c720a76" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void save</definition>
        <argsstring>() const noexcept(false)</argsstring>
        <name>save</name>
        <briefdescription>
<para>Saves configuration file to file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="cpp/error/exception" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if saving fails. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="184" column="10" bodyfile="include/rolly/config.h" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1aa30d950c278f5487c30e4e1251309816" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void revert_to_default</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>revert_to_default</name>
        <briefdescription>
<para>Reverts configuration file to default values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="cpp/error/exception" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if reverting fails. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="193" column="10" bodyfile="include/rolly/config.h" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a420e60e9788bfa3b52aa3aab72ea3a5e" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Returns whether configuration file is valid or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classrolly_1_1configuration__file_1a315419f26d3c59fa143b49b90a019049" kindref="member">valid</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="202" column="15" bodyfile="include/rolly/config.h" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a1e344333134003bc0aab05727b4a4e3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>T const&amp; operator()</definition>
        <argsstring>() const</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>Constant reference to the current values of configuration file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classrolly_1_1configuration__file_1a118d219d09d66ec2576a7bbc31a69d26" kindref="member">values</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="208" column="14" bodyfile="include/rolly/config.h" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a9b6e1a7a6d5d7db85bae38ba04aaec7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>Mutable reference to the current values of configuration file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classrolly_1_1configuration__file_1a61e8a1bf44a495e3db6ffc8041a87b5b" kindref="member">values_mut</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="214" column="8" bodyfile="include/rolly/config.h" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a31469fed90e8e9853f923101bb22488e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrolly_1_1configuration__file" kindref="compound">configuration_file</ref> &amp;</type>
        <definition>configuration_file&amp; operator=</definition>
        <argsstring>(configuration_file const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classrolly_1_1configuration__file" kindref="compound">configuration_file</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="216" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1configuration__file_1a7b28d2ef7e63df8e7bd2e85759d0a723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrolly_1_1configuration__file" kindref="compound">configuration_file</ref> &amp;</type>
        <definition>configuration_file&amp; operator=</definition>
        <argsstring>(configuration_file &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classrolly_1_1configuration__file" kindref="compound">configuration_file</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/config.h" line="217" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1a552d7f392bb1a0fa04a64f737962f1b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::filesystem::path const  &amp;</type>
        <definition>std::filesystem::path const&amp; path</definition>
        <argsstring>() const</argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="27" column="36" bodyfile="include/rolly/io/filedevice.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1abdd96853741d33edcb6d31cae7d30440" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::filesystem::path</type>
        <definition>std::filesystem::path suffixed_path</definition>
        <argsstring>(std::string_view suffix) const</argsstring>
        <name>suffixed_path</name>
        <param>
          <type>std::string_view</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="29" column="30" bodyfile="include/rolly/io/filedevice.h" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1aa7d8623150e6d43ab4bf7493aa8cbc1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool exists</definition>
        <argsstring>() const</argsstring>
        <name>exists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="34" column="13" bodyfile="include/rolly/io/filedevice.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1a9679f146b538754acbf087378a3ddaad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_regular_file</definition>
        <argsstring>() const</argsstring>
        <name>is_regular_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="36" column="13" bodyfile="include/rolly/io/filedevice.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1abe8e2e9db3d4ce712d36196439e748f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string read</definition>
        <argsstring>() const</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="38" column="20" bodyfile="include/rolly/io/filedevice.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1a0d339d4d2a65c872eb96721d4d9fc5de" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>result&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref> &gt;</type>
        <definition>result&lt;std::string&gt; try_read</definition>
        <argsstring>() const noexcept</argsstring>
        <name>try_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="40" column="15" bodyfile="include/rolly/io/filedevice.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1a50fec7e7d10e5475e0ccf14adbaf7db0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void write</definition>
        <argsstring>(std::string_view content) const noexcept(false)</argsstring>
        <name>write</name>
        <param>
          <type>std::string_view</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="42" column="12" bodyfile="include/rolly/io/filedevice.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1a3c3bc25a16c19968d1381cb89df6458b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>result</type>
        <definition>result try_write</definition>
        <argsstring>(std::string_view content) const noexcept</argsstring>
        <name>try_write</name>
        <param>
          <type>std::string_view</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="44" column="9" bodyfile="include/rolly/io/filedevice.h" bodystart="44" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classrolly_1_1io_1_1filedevice_1a5963243bd4dde422ba389da63fb2cab1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto write_permissions</definition>
        <argsstring></argsstring>
        <name>write_permissions</name>
        <initializer>= std::filesystem::perms::owner_read |
                                                std::filesystem::perms::owner_write |
                                                std::filesystem::perms::group_read |
                                                std::filesystem::perms::others_read |
                                                std::filesystem::perms::others_exec |
                                                std::filesystem::perms::owner_all | std::filesystem::perms::group_all</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="17" column="29" bodyfile="include/rolly/io/filedevice.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1a0c8308e2ccfa43c99a02dfb2cd6089ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>static std::string read_from</definition>
        <argsstring>(std::filesystem::path const &amp;path)</argsstring>
        <name>read_from</name>
        <param>
          <type>std::filesystem::path const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="48" column="27" bodyfile="include/rolly/io/filedevice.h" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1a8007f9e387b60936bb962035c645c430" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>result&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref> &gt;</type>
        <definition>static result&lt;std::string&gt; try_read_from</definition>
        <argsstring>(std::filesystem::path const &amp;path) noexcept</argsstring>
        <name>try_read_from</name>
        <param>
          <type>std::filesystem::path const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="55" column="22" bodyfile="include/rolly/io/filedevice.h" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1a0216cd840232d838604b8f3f859eedde" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void write_to</definition>
        <argsstring>(std::filesystem::path const &amp;path, std::string_view content) noexcept(false)</argsstring>
        <name>write_to</name>
        <param>
          <type>std::filesystem::path const &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="62" column="19" bodyfile="include/rolly/io/filedevice.h" bodystart="62" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classrolly_1_1io_1_1filedevice_1a56105d753006a32aa832a7ad76390f01" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>result</type>
        <definition>static result try_write_to</definition>
        <argsstring>(std::filesystem::path const &amp;path, std::string_view content) noexcept</argsstring>
        <name>try_write_to</name>
        <param>
          <type>std::filesystem::path const &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/io/filedevice.h" line="77" column="16" bodyfile="include/rolly/io/filedevice.h" bodystart="77" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration file that can be loaded and saved. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is used to store configuration values in a configuration file in given format. Accepts any type that implements rolly::serialization::serializable_and_deserializable with character type <computeroutput>char</computeroutput> and given format.</para>
<para>Example usage: <programlisting filename=".cpp"><codeline><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DummyConfiguration</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="namespacerolly_1_1types_1a65cf28726f89e62ccf2f1354bc2716df" kindref="member">u32</ref><sp/>test<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IpAddress</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ip;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacerolly_1_1types_1a917e58b0692c2df778a27350534cbfe7" kindref="member">u16</ref><sp/>port;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SockMode</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tcp<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>udp<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>sock_mode{};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>ip_address<sp/>=<sp/>{<sp/>.ip<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">,<sp/>.port<sp/>=<sp/>25565<sp/>};</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rolly::serialization::serialize&lt;fl::serialization::format::toml&gt;(DummyConfiguration<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value)<sp/>-&gt;</highlight></codeline>
<codeline><highlight class="normal">std::basic_string&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;<sp/>{<sp/>/<sp/>implementation<sp/>/<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rolly::serialization::deserialize&lt;fl::serialization::format::toml&gt;(<ref refid="cpp/string/basic_string" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::basic_string&lt;char&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value)<sp/>-&gt;</highlight></codeline>
<codeline><highlight class="normal">DummyConfiguration<sp/>{<sp/>/<sp/>implementation<sp/>/<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>main()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacerolly_1ae1e5f60a57661fe4d13cf754e0a8d6ae" kindref="member">rolly::saving_policy</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerolly_1_1serialization_1_1format" kindref="compound">rolly::serialization::format</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>config<sp/>=<sp/><ref refid="classrolly_1_1configuration__file" kindref="compound">rolly::configuration_file&lt;format::toml, DummyConfiguration&gt;</ref>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;test.toml&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fs::current_path()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;test-cfg&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>explicit_</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>config)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/>config().ip_address.ip<sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>config().ip_address.sock_mode.udp<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>config.save();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>Format type. Must be value of tag <ref refid="namespacerolly_1_1serialization_1_1format" kindref="compound">rolly::serialization::format</ref> or your own format tag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to serialize and deserialize. Must implement rolly::serialization::serializable_and_deserializable with character type <computeroutput>char</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="namespacerolly_1_1serialization_1_1format" kindref="compound">rolly::serialization::format</ref> </para>
</simplesect>
<simplesect kind="see"><para>rolly::serialization::serializable_and_deserializable </para>
</simplesect>
<simplesect kind="see"><para><ref refid="namespacerolly_1ae1e5f60a57661fe4d13cf754e0a8d6ae" kindref="member">rolly::saving_policy</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>filedevice</label>
        <link refid="classrolly_1_1io_1_1filedevice"/>
      </node>
      <node id="1">
        <label>configuration_file&lt; F, T &gt;</label>
        <link refid="classrolly_1_1configuration__file"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>filedevice</label>
        <link refid="classrolly_1_1io_1_1filedevice"/>
      </node>
      <node id="1">
        <label>configuration_file&lt; F, T &gt;</label>
        <link refid="classrolly_1_1configuration__file"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/rolly/config.h" line="79" column="51" bodyfile="include/rolly/config.h" bodystart="79" bodyend="224"/>
    <listofallmembers>
      <member refid="classrolly_1_1configuration__file_1ab7300f20d215d2e4369770ff4135a113" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>configuration_file</name></member>
      <member refid="classrolly_1_1configuration__file_1a18451451f7e324f25db86f011a7908a5" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>configuration_file</name></member>
      <member refid="classrolly_1_1configuration__file_1a0c950eff44aa6758331e8ef31b282f13" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>configuration_file</name></member>
      <member refid="classrolly_1_1configuration__file_1abc103010a13e13273b7ebb6f5abb744c" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>configuration_file</name></member>
      <member refid="classrolly_1_1configuration__file_1a97f2ce038608c3eea243a200d73abc1b" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>default_values</name></member>
      <member refid="classrolly_1_1configuration__file_1a11f2fb119b4de2fafaacbf7911b0997f" prot="private" virt="non-virtual"><scope>rolly::configuration_file</scope><name>default_values_</name></member>
      <member refid="classrolly_1_1configuration__file_1a4beca5e62db0dc01ba9a5b921725b09d" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>default_values_mut</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1aa7d8623150e6d43ab4bf7493aa8cbc1a" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>exists</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1ac598adefc92873c5eee90bc1d4b858dc" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>filedevice</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1a9679f146b538754acbf087378a3ddaad" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>is_regular_file</name></member>
      <member refid="classrolly_1_1configuration__file_1a96350dbe2693f29fd1fd7e0b44981bf8" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>load</name></member>
      <member refid="classrolly_1_1configuration__file_1a420e60e9788bfa3b52aa3aab72ea3a5e" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>operator bool</name></member>
      <member refid="classrolly_1_1configuration__file_1a1e344333134003bc0aab05727b4a4e3c" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>operator()</name></member>
      <member refid="classrolly_1_1configuration__file_1a9b6e1a7a6d5d7db85bae38ba04aaec7f" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>operator()</name></member>
      <member refid="classrolly_1_1configuration__file_1a31469fed90e8e9853f923101bb22488e" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>operator=</name></member>
      <member refid="classrolly_1_1configuration__file_1a7b28d2ef7e63df8e7bd2e85759d0a723" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>operator=</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1a552d7f392bb1a0fa04a64f737962f1b2" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>path</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1abe8e2e9db3d4ce712d36196439e748f7" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>read</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1a0c8308e2ccfa43c99a02dfb2cd6089ef" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>read_from</name></member>
      <member refid="classrolly_1_1configuration__file_1aa30d950c278f5487c30e4e1251309816" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>revert_to_default</name></member>
      <member refid="classrolly_1_1configuration__file_1ac09d45cc534c27373744e2472c720a76" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>save</name></member>
      <member refid="classrolly_1_1configuration__file_1a4c482a82a76a1795230c3b7c795c6522" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>saving_policy</name></member>
      <member refid="classrolly_1_1configuration__file_1a097f672d76ba9b94bd6215d465feeb64" prot="private" virt="non-virtual"><scope>rolly::configuration_file</scope><name>saving_policy_</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1abdd96853741d33edcb6d31cae7d30440" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>suffixed_path</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1a0d339d4d2a65c872eb96721d4d9fc5de" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>try_read</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1a8007f9e387b60936bb962035c645c430" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>try_read_from</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1a3c3bc25a16c19968d1381cb89df6458b" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>try_write</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1a56105d753006a32aa832a7ad76390f01" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>try_write_to</name></member>
      <member refid="classrolly_1_1configuration__file_1a315419f26d3c59fa143b49b90a019049" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>valid</name></member>
      <member refid="classrolly_1_1configuration__file_1a2dd81c85c0b7f68b59750ae4441f7da4" prot="private" virt="non-virtual"><scope>rolly::configuration_file</scope><name>valid_</name></member>
      <member refid="classrolly_1_1configuration__file_1a118d219d09d66ec2576a7bbc31a69d26" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>values</name></member>
      <member refid="classrolly_1_1configuration__file_1aa4ade5f7d2e6734f998683439bba9fe1" prot="private" virt="non-virtual"><scope>rolly::configuration_file</scope><name>values_</name></member>
      <member refid="classrolly_1_1configuration__file_1a61e8a1bf44a495e3db6ffc8041a87b5b" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>values_mut</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1a50fec7e7d10e5475e0ccf14adbaf7db0" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>write</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1a5963243bd4dde422ba389da63fb2cab1" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>write_permissions</name></member>
      <member refid="classrolly_1_1io_1_1filedevice_1a0216cd840232d838604b8f3f859eedde" prot="public" virt="non-virtual"><scope>rolly::configuration_file</scope><name>write_to</name></member>
      <member refid="classrolly_1_1configuration__file_1a87744a7d4bc1ae142669345201fd3cff" prot="public" virt="virtual"><scope>rolly::configuration_file</scope><name>~configuration_file</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

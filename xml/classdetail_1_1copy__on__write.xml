<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdetail_1_1copy__on__write" kind="class" language="C++" prot="public">
    <compoundname>detail::copy_on_write</compoundname>
    <includes refid="signals_8h" local="no">rolly/functional/signals.h</includes>
    <innerclass refid="structdetail_1_1copy__on__write_1_1payload" prot="private">detail::copy_on_write::payload</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classdetail_1_1copy__on__write_1ab09edc4b568d547d04da66f947f5595a" prot="public" static="no">
        <type>T</type>
        <definition>using element_type =  T</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="422" column="7" bodyfile="rolly/functional/signals.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdetail_1_1copy__on__write_1a993105802e018e70be0f91fc6aa581ff" prot="private" static="no" mutable="no">
        <type>payload *</type>
        <definition>payload* m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="481" column="15" bodyfile="rolly/functional/signals.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdetail_1_1copy__on__write_1adf1d2dce525a8c07bce090fb3526934e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>copy_on_write</definition>
        <argsstring>()</argsstring>
        <name>copy_on_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="424" column="7" bodyfile="rolly/functional/signals.h" bodystart="424" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1copy__on__write_1aa695e83695bbdae5144bad6255fd5026" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>copy_on_write</definition>
        <argsstring>(U &amp;&amp;x, std::enable_if_t&lt;! std::is_same&lt; std::decay_t&lt; U &gt;, copy_on_write &gt;::value &gt; *=nullptr)</argsstring>
        <name>copy_on_write</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::enable_if_t&lt;! <ref refid="cpp/types/is_same" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::is_same</ref>&lt; std::decay_t&lt; U &gt;, <ref refid="classdetail_1_1copy__on__write" kindref="compound">copy_on_write</ref> &gt;::value &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="428" column="16" bodyfile="rolly/functional/signals.h" bodystart="428" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1copy__on__write_1a1e386486c2cde2c0a4d103a5bc541f57" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>copy_on_write</definition>
        <argsstring>(copy_on_write const &amp;x) noexcept</argsstring>
        <name>copy_on_write</name>
        <param>
          <type><ref refid="classdetail_1_1copy__on__write" kindref="compound">copy_on_write</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="434" column="7" bodyfile="rolly/functional/signals.h" bodystart="434" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1copy__on__write_1a8d7b2f02f32320620d3c815616675780" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>copy_on_write</definition>
        <argsstring>(copy_on_write &amp;&amp;x) noexcept</argsstring>
        <name>copy_on_write</name>
        <param>
          <type><ref refid="classdetail_1_1copy__on__write" kindref="compound">copy_on_write</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="439" column="7" bodyfile="rolly/functional/signals.h" bodystart="439" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1copy__on__write_1af6720899f39da8d39e4e28ff2d88caa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~copy_on_write</definition>
        <argsstring>()</argsstring>
        <name>~copy_on_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="444" column="7" bodyfile="rolly/functional/signals.h" bodystart="444" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1copy__on__write_1a5c516f55a4760cbfe76a3411da0e3631" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1copy__on__write" kindref="compound">copy_on_write</ref> &amp;</type>
        <definition>copy_on_write&amp; operator=</definition>
        <argsstring>(copy_on_write const &amp;x) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classdetail_1_1copy__on__write" kindref="compound">copy_on_write</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="450" column="21" bodyfile="rolly/functional/signals.h" bodystart="450" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1copy__on__write_1a38f641611e2fa6f0210caeaec3b198d2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1copy__on__write" kindref="compound">copy_on_write</ref> &amp;</type>
        <definition>copy_on_write&amp; operator=</definition>
        <argsstring>(copy_on_write &amp;&amp;x) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classdetail_1_1copy__on__write" kindref="compound">copy_on_write</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="457" column="21" bodyfile="rolly/functional/signals.h" bodystart="457" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1copy__on__write_1a931513eba433b0f72dbbe57a46ebcd24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>element_type &amp;</type>
        <definition>element_type&amp; write</definition>
        <argsstring>()</argsstring>
        <name>write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="463" column="20" bodyfile="rolly/functional/signals.h" bodystart="463" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1copy__on__write_1afcc506b8af482d93f080cb9a28eadfd2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>element_type const  &amp;</type>
        <definition>element_type const&amp; read</definition>
        <argsstring>() const noexcept</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="470" column="26" bodyfile="rolly/functional/signals.h" bodystart="470" bodyend="470"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdetail_1_1copy__on__write_1a0f9109d0f1cb46a24ebe770147376b44" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>friend void</type>
        <definition>void swap</definition>
        <argsstring>(copy_on_write &amp;x, copy_on_write &amp;y) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classdetail_1_1copy__on__write" kindref="compound">copy_on_write</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1copy__on__write" kindref="compound">copy_on_write</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="472" column="26" bodyfile="rolly/functional/signals.h" bodystart="472" bodyend="475"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdetail_1_1copy__on__write_1a17f79efcc0f2e0d5cb9afcdee013e64c" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool unique</definition>
        <argsstring>() const noexcept</argsstring>
        <name>unique</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rolly/functional/signals.h" line="478" column="12" bodyfile="rolly/functional/signals.h" bodystart="478" bodyend="478"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A simple copy on write container that will be used to improve slot lists access efficiency in a multithreaded context. </para>
    </detaileddescription>
    <location file="rolly/functional/signals.h" line="409" column="24" bodyfile="rolly/functional/signals.h" bodystart="409" bodyend="482"/>
    <listofallmembers>
      <member refid="classdetail_1_1copy__on__write_1adf1d2dce525a8c07bce090fb3526934e" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>copy_on_write</name></member>
      <member refid="classdetail_1_1copy__on__write_1aa695e83695bbdae5144bad6255fd5026" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>copy_on_write</name></member>
      <member refid="classdetail_1_1copy__on__write_1a1e386486c2cde2c0a4d103a5bc541f57" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>copy_on_write</name></member>
      <member refid="classdetail_1_1copy__on__write_1a8d7b2f02f32320620d3c815616675780" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>copy_on_write</name></member>
      <member refid="classdetail_1_1copy__on__write_1ab09edc4b568d547d04da66f947f5595a" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>element_type</name></member>
      <member refid="classdetail_1_1copy__on__write_1a993105802e018e70be0f91fc6aa581ff" prot="private" virt="non-virtual"><scope>detail::copy_on_write</scope><name>m_data</name></member>
      <member refid="classdetail_1_1copy__on__write_1a5c516f55a4760cbfe76a3411da0e3631" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>operator=</name></member>
      <member refid="classdetail_1_1copy__on__write_1a38f641611e2fa6f0210caeaec3b198d2" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>operator=</name></member>
      <member refid="classdetail_1_1copy__on__write_1afcc506b8af482d93f080cb9a28eadfd2" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>read</name></member>
      <member refid="classdetail_1_1copy__on__write_1a0f9109d0f1cb46a24ebe770147376b44" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>swap</name></member>
      <member refid="classdetail_1_1copy__on__write_1a17f79efcc0f2e0d5cb9afcdee013e64c" prot="private" virt="non-virtual"><scope>detail::copy_on_write</scope><name>unique</name></member>
      <member refid="classdetail_1_1copy__on__write_1a931513eba433b0f72dbbe57a46ebcd24" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>write</name></member>
      <member refid="classdetail_1_1copy__on__write_1af6720899f39da8d39e4e28ff2d88caa5" prot="public" virt="non-virtual"><scope>detail::copy_on_write</scope><name>~copy_on_write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

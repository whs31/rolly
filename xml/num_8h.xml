<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="num_8h" kind="file" language="C++">
    <compoundname>num.h</compoundname>
    <includes refid="definitions_8h" local="yes">../global/definitions.h</includes>
    <includes refid="type__traits_8h" local="yes">../type_traits.h</includes>
    <includedby refid="bit_8h" local="yes">bit.h</includedby>
    <includedby refid="concepts_8h" local="yes">concepts.h</includedby>
    <includedby refid="numbers_8h" local="yes">numbers.h</includedby>
    <includedby refid="angle_8h" local="yes">angle.h</includedby>
    <includedby refid="point2d_8h" local="yes">point2d.h</includedby>
    <includedby refid="size2d_8h" local="yes">size2d.h</includedby>
    <includedby refid="vector2d_8h" local="yes">vector2d.h</includedby>
    <includedby refid="velocity_8h" local="yes">velocity.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>export.h</label>
        <link refid="export_8h_source"/>
      </node>
      <node id="4">
        <label>platform_definitions.h</label>
        <link refid="platform__definitions_8h_source"/>
      </node>
      <node id="2">
        <label>../global/definitions.h</label>
        <link refid="definitions_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../type_traits.h</label>
        <link refid="type__traits_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>type_traits</label>
      </node>
      <node id="1">
        <label>num.h</label>
        <link refid="num_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>angle.h</label>
        <link refid="angle_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>point2d.h</label>
        <link refid="point2d_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>math.h</label>
        <link refid="math_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>bit.h</label>
        <link refid="bit_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>size2d.h</label>
        <link refid="size2d_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>numbers.h</label>
        <link refid="numbers_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>num.h</label>
        <link refid="num_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector2d.h</label>
        <link refid="vector2d_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>concepts.h</label>
        <link refid="concepts_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>velocity.h</label>
        <link refid="velocity_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>rolly.h</label>
        <link refid="rolly_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structrolly_1_1is__num" prot="public">rolly::is_num</innerclass>
    <innernamespace refid="namespacerolly">rolly</innernamespace>
    <innernamespace refid="namespacerolly_1_1concepts">rolly::concepts</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacerolly_1_1concepts_1aea9bb2c4075cdbbe6ae4d3b6eef46cda" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept num</definition>
        <argsstring></argsstring>
        <name>num</name>
        <initializer>= std::integral&lt;plain_type_t&lt;T&gt;&gt; or std::floating_point&lt;plain_type_t&lt;T&gt;&gt; and
                                                    (not std::is_same_v&lt;plain_type_t&lt;T&gt;, bool&gt;) and
                                                    (not std::is_same_v&lt;plain_type_t&lt;T&gt;, <ref refid="cpp/types/nullptr_t" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::nullptr_t</ref>&gt;)</initializer>
        <briefdescription>
<para>Concept that is true if T is a number. </para>
        </briefdescription>
        <detaileddescription>
<para>Will yield <computeroutput>true</computeroutput> for any type that is an integral or floating point type, except for <computeroutput>bool</computeroutput> and <computeroutput><ref refid="cpp/types/nullptr_t" kindref="compound" external="/home/runner/work/rolly/rolly/doxygen/cppreference-doxygen-web.tag.xml">std::nullptr_t</ref></computeroutput>. <simplesect kind="note"><para>This concept will also yield <computeroutput>true</computeroutput> for references to numbers. </para>
</simplesect>
<simplesect kind="note"><para>Available only in C++20 mode. Use <ref refid="structrolly_1_1is__num" kindref="compound">rolly::is_num</ref> or rolly::is_num_v in C++17 mode instead </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rolly/concepts/num.h" line="29" column="11" bodyfile="include/rolly/concepts/num.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/rolly/concepts/num.h"/>
  </compounddef>
</doxygen>
